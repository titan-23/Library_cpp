Search.setIndex({"alltitles": {"How to Use": [[88, "how-to-use"]], "Library Overview": [[88, "library-overview"]], "Welcome to titan_cpplib\u2019s documentation!": [[88, "welcome-to-titan-cpplib-s-documentation"]], "__pycache__": [[0, "pycache"]], "action": [[1, "action"], [2, "action"]], "ahc": [[10, "ahc"]], "ahc/beam_search": [[5, "ahc-beam-search"]], "ahc/gomi": [[9, "ahc-gomi"]], "algorithm": [[15, "algorithm"]], "array": [[21, "array"]], "avl tree bit vector": [[22, "avl-tree-bit-vector"]], "avl tree multiset": [[23, "avl-tree-multiset"]], "avl tree set": [[24, "avl-tree-set"]], "bbst node": [[25, "bbst-node"]], "beam search": [[3, "beam-search"]], "beam search euler": [[6, "beam-search-euler"]], "beam search old": [[8, "beam-search-old"]], "beam search with tree": [[4, "beam-search-with-tree"], [7, "beam-search-with-tree"]], "bfs path": [[75, "bfs-path"]], "binary trie multiset": [[26, "binary-trie-multiset"]], "binary trie set": [[27, "binary-trie-set"]], "bit vector": [[28, "bit-vector"]], "cumulative sum": [[30, "cumulative-sum"]], "cumulative sum 2D": [[29, "cumulative-sum-2d"]], "data_structures": [[47, "data-structures"]], "deque": [[31, "deque"]], "dijkstra": [[76, "dijkstra"]], "dijkstra path": [[77, "dijkstra-path"]], "divs": [[89, "divs"]], "dual commutative segment tree": [[32, "dual-commutative-segment-tree"]], "dual segment tree": [[33, "dual-segment-tree"]], "dynamic bit vector": [[34, "dynamic-bit-vector"]], "dynamic fenwick tree 2D": [[35, "dynamic-fenwick-tree-2d"]], "dynamic lazy segment tree": [[36, "dynamic-lazy-segment-tree"]], "dynamic list": [[37, "dynamic-list"]], "dynamic segment tree": [[38, "dynamic-segment-tree"]], "dynamic segment tree init": [[39, "dynamic-segment-tree-init"]], "dynamic wavelet matrix": [[40, "dynamic-wavelet-matrix"]], "dynamic wavelet tree": [[41, "dynamic-wavelet-tree"]], "euler tour tree": [[42, "euler-tour-tree"]], "fenwick tree": [[44, "fenwick-tree"]], "fenwick tree 2D": [[43, "fenwick-tree-2d"]], "gomi": [[73, "gomi"]], "graph": [[78, "graph"], [81, "graph"]], "hash dict": [[45, "hash-dict"]], "hash set": [[46, "hash-set"]], "hash string": [[96, "hash-string"]], "hld": [[79, "hld"]], "hld segment tree": [[80, "hld-segment-tree"]], "is kaibun": [[98, "is-kaibun"]], "kmeans": [[11, "kmeans"]], "lazy link cut tree": [[48, "lazy-link-cut-tree"]], "lazy wb tree": [[49, "lazy-wb-tree"]], "lca": [[82, "lca"]], "link cut tree": [[50, "link-cut-tree"], [74, "link-cut-tree"]], "make primelist": [[91, "make-primelist"]], "math": [[90, "math"], [92, "math"]], "max heap": [[51, "max-heap"]], "maximum independent set": [[83, "maximum-independent-set"]], "min heap": [[52, "min-heap"]], "minimum spanning tree": [[84, "minimum-spanning-tree"]], "minimum steiner tree": [[85, "minimum-steiner-tree"]], "mo": [[16, "mo"]], "offline dynamic connectivity": [[53, "offline-dynamic-connectivity"]], "offline dynamic connectivity sum": [[54, "offline-dynamic-connectivity-sum"]], "other": [[94, "other"]], "others": [[93, "others"]], "persistent array": [[55, "persistent-array"]], "persistent lazy wb tree": [[56, "persistent-lazy-wb-tree"]], "persistent segment tree": [[57, "persistent-segment-tree"]], "persistent stack": [[58, "persistent-stack"]], "print": [[95, "print"]], "quadratic division set": [[59, "quadratic-division-set"]], "random": [[17, "random"]], "random tree": [[18, "random-tree"]], "rle": [[19, "rle"]], "rooted tree": [[86, "rooted-tree"]], "sa": [[12, "sa"]], "segment quadratic division": [[60, "segment-quadratic-division"]], "segment tree": [[61, "segment-tree"]], "sparse table": [[62, "sparse-table"]], "state pool": [[13, "state-pool"]], "static multiset": [[63, "static-multiset"]], "static set": [[64, "static-set"]], "string": [[97, "string"]], "timer": [[14, "timer"]], "undoable union find": [[65, "undoable-union-find"]], "undoable union find sum": [[66, "undoable-union-find-sum"]], "union find": [[67, "union-find"]], "union find light": [[68, "union-find-light"]], "warshall floyd path": [[87, "warshall-floyd-path"]], "wavelet matrix": [[69, "wavelet-matrix"]], "wavelet matrix cumulative sum": [[70, "wavelet-matrix-cumulative-sum"]], "wb tree": [[71, "wb-tree"]], "weight union find": [[72, "weight-union-find"]], "zaatsu": [[20, "zaatsu"]], "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5": [[88, "id1"]], "\u30b3\u30fc\u30c9\u5c55\u958b": [[88, "id3"]], "\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9": [[1, "id1"], [2, "id1"], [3, "id1"], [4, "id1"], [6, "id1"], [7, "id1"], [8, "id1"], [11, "id1"], [12, "id1"], [13, "id1"], [14, "id1"], [16, "id1"], [17, "id1"], [18, "id1"], [19, "id1"], [20, "id1"], [21, "id1"], [22, "id1"], [23, "id1"], [24, "id1"], [25, "id1"], [26, "id1"], [27, "id1"], [28, "id1"], [29, "id1"], [30, "id1"], [31, "id1"], [32, "id1"], [33, "id1"], [34, "id1"], [35, "id1"], [36, "id1"], [37, "id1"], [38, "id1"], [39, "id1"], [40, "id1"], [41, "id1"], [42, "id1"], [43, "id1"], [44, "id1"], [45, "id1"], [46, "id1"], [48, "id1"], [49, "id1"], [50, "id1"], [51, "id1"], [52, "id1"], [53, "id1"], [54, "id1"], [55, "id1"], [56, "id1"], [57, "id1"], [58, "id1"], [59, "id1"], [60, "id1"], [61, "id1"], [62, "id1"], [63, "id1"], [64, "id1"], [65, "id1"], [66, "id1"], [67, "id1"], [68, "id1"], [69, "id1"], [70, "id1"], [71, "id1"], [72, "id1"], [74, "id1"], [75, "id1"], [76, "id1"], [77, "id1"], [78, "id1"], [79, "id1"], [80, "id1"], [82, "id1"], [83, "id1"], [84, "id1"], [85, "id1"], [86, "id1"], [87, "id1"], [89, "id1"], [91, "id1"], [92, "id1"], [94, "id1"], [95, "id1"], [96, "id1"], [98, "id1"]], "\u4ed5\u69d8": [[1, "id2"], [2, "id2"], [3, "id2"], [4, "id2"], [6, "id2"], [7, "id2"], [8, "id2"], [11, "id2"], [12, "id2"], [13, "id2"], [14, "id2"], [16, "id2"], [17, "id2"], [18, "id2"], [19, "id2"], [20, "id2"], [21, "id2"], [22, "id2"], [23, "id2"], [24, "id2"], [25, "id2"], [26, "id2"], [27, "id2"], [28, "id2"], [29, "id2"], [30, "id2"], [31, "id2"], [32, "id2"], [33, "id2"], [34, "id2"], [35, "id2"], [36, "id2"], [37, "id2"], [38, "id2"], [39, "id2"], [40, "id2"], [41, "id2"], [42, "id2"], [43, "id2"], [44, "id2"], [45, "id2"], [46, "id2"], [48, "id2"], [49, "id2"], [50, "id2"], [51, "id2"], [52, "id2"], [53, "id2"], [54, "id2"], [55, "id2"], [56, "id2"], [57, "id2"], [58, "id2"], [59, "id2"], [60, "id2"], [61, "id2"], [62, "id2"], [63, "id2"], [64, "id2"], [65, "id2"], [66, "id2"], [67, "id2"], [68, "id2"], [69, "id2"], [70, "id2"], [71, "id2"], [72, "id2"], [74, "id2"], [75, "id2"], [76, "id2"], [77, "id2"], [78, "id2"], [79, "id2"], [80, "id2"], [82, "id2"], [83, "id2"], [84, "id2"], [85, "id2"], [86, "id2"], [87, "id2"], [89, "id2"], [91, "id2"], [92, "id2"], [94, "id2"], [95, "id2"], [96, "id2"], [98, "id2"]], "\u4f7f\u7528\u4f8b": [[88, "id2"]], "\u691c\u7d22": [[88, "id4"]]}, "docnames": ["__pycache__/index", "ahc/action_cpp", "ahc/beam_search/action_cpp", "ahc/beam_search/beam_search_cpp", "ahc/beam_search/beam_search_with_tree_cpp", "ahc/beam_search/index", "ahc/beam_search_euler_cpp", "ahc/beam_search_with_tree_cpp", "ahc/gomi/beam_search_old_cpp", "ahc/gomi/index", "ahc/index", "ahc/kmeans_cpp", "ahc/sa_cpp", "ahc/state_pool_cpp", "ahc/timer_cpp", "algorithm/index", "algorithm/mo_cpp", "algorithm/random_cpp", "algorithm/random_tree_cpp", "algorithm/rle_cpp", "algorithm/zaatsu_cpp", "data_structures/array_cpp", "data_structures/avl_tree_bit_vector_cpp", "data_structures/avl_tree_multiset_cpp", "data_structures/avl_tree_set_cpp", "data_structures/bbst_node_cpp", "data_structures/binary_trie_multiset_cpp", "data_structures/binary_trie_set_cpp", "data_structures/bit_vector_cpp", "data_structures/cumulative_sum_2D_cpp", "data_structures/cumulative_sum_cpp", "data_structures/deque_cpp", "data_structures/dual_commutative_segment_tree_cpp", "data_structures/dual_segment_tree_cpp", "data_structures/dynamic_bit_vector_cpp", "data_structures/dynamic_fenwick_tree_2D_cpp", "data_structures/dynamic_lazy_segment_tree_cpp", "data_structures/dynamic_list_cpp", "data_structures/dynamic_segment_tree_cpp", "data_structures/dynamic_segment_tree_init_cpp", "data_structures/dynamic_wavelet_matrix_cpp", "data_structures/dynamic_wavelet_tree_cpp", "data_structures/euler_tour_tree_cpp", "data_structures/fenwick_tree_2D_cpp", "data_structures/fenwick_tree_cpp", "data_structures/hash_dict_cpp", "data_structures/hash_set_cpp", "data_structures/index", "data_structures/lazy_link_cut_tree_cpp", "data_structures/lazy_wb_tree_cpp", "data_structures/link_cut_tree_cpp", "data_structures/max_heap_cpp", "data_structures/min_heap_cpp", "data_structures/offline_dynamic_connectivity_cpp", "data_structures/offline_dynamic_connectivity_sum_cpp", "data_structures/persistent_array_cpp", "data_structures/persistent_lazy_wb_tree_cpp", "data_structures/persistent_segment_tree_cpp", "data_structures/persistent_stack_cpp", "data_structures/quadratic_division_set_cpp", "data_structures/segment_quadratic_division_cpp", "data_structures/segment_tree_cpp", "data_structures/sparse_table_cpp", "data_structures/static_multiset_cpp", "data_structures/static_set_cpp", "data_structures/undoable_union_find_cpp", "data_structures/undoable_union_find_sum_cpp", "data_structures/union_find_cpp", "data_structures/union_find_light_cpp", "data_structures/wavelet_matrix_cpp", "data_structures/wavelet_matrix_cumulative_sum_cpp", "data_structures/wb_tree_cpp", "data_structures/weight_union_find_cpp", "gomi/index", "gomi/link_cut_tree_cpp", "graph/bfs_path_cpp", "graph/dijkstra_cpp", "graph/dijkstra_path_cpp", "graph/graph_cpp", "graph/hld_cpp", "graph/hld_segment_tree_cpp", "graph/index", "graph/lca_cpp", "graph/maximum_independent_set_cpp", "graph/minimum_spanning_tree_cpp", "graph/minimum_steiner_tree_cpp", "graph/rooted_tree_cpp", "graph/warshall_floyd_path_cpp", "index", "math/divs_cpp", "math/index", "math/make_primelist_cpp", "math/math_cpp", "others/index", "others/other_cpp", "others/print_cpp", "string/hash_string_cpp", "string/index", "string/is_kaibun_cpp"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["__pycache__/index.rst", "ahc/action_cpp.rst", "ahc/beam_search/action_cpp.rst", "ahc/beam_search/beam_search_cpp.rst", "ahc/beam_search/beam_search_with_tree_cpp.rst", "ahc/beam_search/index.rst", "ahc/beam_search_euler_cpp.rst", "ahc/beam_search_with_tree_cpp.rst", "ahc/gomi/beam_search_old_cpp.rst", "ahc/gomi/index.rst", "ahc/index.rst", "ahc/kmeans_cpp.rst", "ahc/sa_cpp.rst", "ahc/state_pool_cpp.rst", "ahc/timer_cpp.rst", "algorithm/index.rst", "algorithm/mo_cpp.rst", "algorithm/random_cpp.rst", "algorithm/random_tree_cpp.rst", "algorithm/rle_cpp.rst", "algorithm/zaatsu_cpp.rst", "data_structures/array_cpp.rst", "data_structures/avl_tree_bit_vector_cpp.rst", "data_structures/avl_tree_multiset_cpp.rst", "data_structures/avl_tree_set_cpp.rst", "data_structures/bbst_node_cpp.rst", "data_structures/binary_trie_multiset_cpp.rst", "data_structures/binary_trie_set_cpp.rst", "data_structures/bit_vector_cpp.rst", "data_structures/cumulative_sum_2D_cpp.rst", "data_structures/cumulative_sum_cpp.rst", "data_structures/deque_cpp.rst", "data_structures/dual_commutative_segment_tree_cpp.rst", "data_structures/dual_segment_tree_cpp.rst", "data_structures/dynamic_bit_vector_cpp.rst", "data_structures/dynamic_fenwick_tree_2D_cpp.rst", "data_structures/dynamic_lazy_segment_tree_cpp.rst", "data_structures/dynamic_list_cpp.rst", "data_structures/dynamic_segment_tree_cpp.rst", "data_structures/dynamic_segment_tree_init_cpp.rst", "data_structures/dynamic_wavelet_matrix_cpp.rst", "data_structures/dynamic_wavelet_tree_cpp.rst", "data_structures/euler_tour_tree_cpp.rst", "data_structures/fenwick_tree_2D_cpp.rst", "data_structures/fenwick_tree_cpp.rst", "data_structures/hash_dict_cpp.rst", "data_structures/hash_set_cpp.rst", "data_structures/index.rst", "data_structures/lazy_link_cut_tree_cpp.rst", "data_structures/lazy_wb_tree_cpp.rst", "data_structures/link_cut_tree_cpp.rst", "data_structures/max_heap_cpp.rst", "data_structures/min_heap_cpp.rst", "data_structures/offline_dynamic_connectivity_cpp.rst", "data_structures/offline_dynamic_connectivity_sum_cpp.rst", "data_structures/persistent_array_cpp.rst", "data_structures/persistent_lazy_wb_tree_cpp.rst", "data_structures/persistent_segment_tree_cpp.rst", "data_structures/persistent_stack_cpp.rst", "data_structures/quadratic_division_set_cpp.rst", "data_structures/segment_quadratic_division_cpp.rst", "data_structures/segment_tree_cpp.rst", "data_structures/sparse_table_cpp.rst", "data_structures/static_multiset_cpp.rst", "data_structures/static_set_cpp.rst", "data_structures/undoable_union_find_cpp.rst", "data_structures/undoable_union_find_sum_cpp.rst", "data_structures/union_find_cpp.rst", "data_structures/union_find_light_cpp.rst", "data_structures/wavelet_matrix_cpp.rst", "data_structures/wavelet_matrix_cumulative_sum_cpp.rst", "data_structures/wb_tree_cpp.rst", "data_structures/weight_union_find_cpp.rst", "gomi/index.rst", "gomi/link_cut_tree_cpp.rst", "graph/bfs_path_cpp.rst", "graph/dijkstra_cpp.rst", "graph/dijkstra_path_cpp.rst", "graph/graph_cpp.rst", "graph/hld_cpp.rst", "graph/hld_segment_tree_cpp.rst", "graph/index.rst", "graph/lca_cpp.rst", "graph/maximum_independent_set_cpp.rst", "graph/minimum_spanning_tree_cpp.rst", "graph/minimum_steiner_tree_cpp.rst", "graph/rooted_tree_cpp.rst", "graph/warshall_floyd_path_cpp.rst", "index.rst", "math/divs_cpp.rst", "math/index.rst", "math/make_primelist_cpp.rst", "math/math_cpp.rst", "others/index.rst", "others/other_cpp.rst", "others/print_cpp.rst", "string/hash_string_cpp.rst", "string/index.rst", "string/is_kaibun_cpp.rst"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [7, 11, 16, 21, 22, 24, 34, 37, 40, 41, 44, 45, 46, 48, 49, 50, 53, 54, 56, 57, 58, 61, 62, 66, 69, 70, 71, 74, 75, 77, 78, 79, 82, 83, 87, 94, 95, 96, 98], "0": [6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 85, 87, 89, 91, 92, 95, 96, 98], "001": 14, "01": 6, "02": 6, "033": 95, "0x517cc1b727220a95": [45, 46], "0xffffffff": 17, "1": [6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 89, 91, 92, 95, 96, 98], "100": 6, "1000": [6, 7, 12, 34], "1000000000": 96, "11": 17, "115639": 6, "11fac5627672a6d6a9f6": 96, "123456789": 17, "127": 22, "1795265022": 92, "19": 17, "1e9": [6, 43, 75], "1ll": [16, 26, 27, 36, 38, 39, 53, 54, 92], "1ull": [28, 45, 46, 96], "2": [6, 8, 17, 18, 22, 23, 24, 26, 27, 31, 34, 36, 37, 38, 39, 45, 46, 49, 51, 52, 53, 54, 55, 56, 71, 74, 78, 79, 82, 83, 85, 87, 89, 91, 92, 95, 96, 98], "2024": 6, "230711": 18, "25": 16, "2500": 7, "27": 18, "28178": 92, "2d": 47, "2ll": 92, "2\u6b21\u5143\u7d2f\u7a4d\u548c\u30e9\u30a4\u30d6\u30e9\u30ea": 29, "3": [16, 74, 85, 87], "30": 96, "31": [12, 96], "31624": 91, "31m": 95, "32": [17, 28, 32, 33, 40, 41, 44, 45, 46, 53, 54, 55, 61, 62, 69], "325": 92, "32m": 95, "362436069": 17, "37": 96, "4": [6, 7, 74, 96], "414123123": 96, "450775": 92, "500": 37, "521288629": 17, "6": [28, 45, 46], "61": [92, 96], "63": [22, 28, 45, 46], "64": [22, 36, 38, 39, 40], "7": 92, "8": 17, "88675123": 17, "9375": 92, "9780504": 92, "A": 18, "_": [6, 11, 42, 44, 49, 71], "__": 6, "__builtin_clz": [32, 33, 40, 41, 44, 45, 46, 53, 54, 55, 61, 62, 69], "__builtin_clzl": [36, 38, 39], "__builtin_popcountl": [22, 28], "__gnu_pbd": 8, "__lca_e": 82, "__lca_op": 82, "__uint128_t": 22, "_access_ans_rank1": [22, 34, 41], "_access_pop_and_rank1": [22, 34, 40, 41], "_add_bal": [23, 24], "_all_appli": [32, 33], "_all_sum": 66, "_apply_f": 48, "_apply_rev": [48, 50], "_balanc": 22, "_balance_left": [49, 56, 71], "_balance_right": [49, 56, 71], "_bit": [26, 27, 35, 43, 53, 54], "_bit_insert": 22, "_bit_len": 22, "_bit_pop": 22, "_build": [22, 23, 24, 32, 33, 40, 41, 49, 55, 56, 57, 59, 61, 70, 71], "_cut": [48, 50], "_data": [32, 33, 61], "_debug_acc": 22, "_df": 79, "_discard": 27, "_dist": 86, "_down": [51, 52], "_e": [61, 66], "_end": [22, 26, 27], "_evert": [48, 50], "_expos": [48, 50], "_find": [26, 27], "_group_count": [65, 66], "_h": [35, 43], "_heapifi": [51, 52], "_histori": [65, 66], "_id": [32, 33], "_indx": 18, "_init_build": 42, "_insert_and_rank1": [22, 34, 40, 41], "_internal_add": [53, 54], "_is_root": 74, "_kei": 22, "_l": 16, "_lazi": [32, 33], "_left": 22, "_left_splai": 42, "_lim": [26, 27], "_link": [48, 50], "_log": [32, 33, 40, 41, 61], "_make_nod": [22, 26, 27], "_max": 25, "_merg": 42, "_merge_nod": [49, 56, 71], "_merge_with_root": [49, 56, 71], "_mid": 40, "_min": 25, "_msk": [53, 54], "_n": [20, 32, 33, 44, 53, 54, 65, 66, 74], "_new": [49, 55, 56, 57, 71], "_next": 25, "_one_sum": 66, "_op": 61, "_parent": [65, 66], "_pop": 42, "_pop_right": [49, 56, 71], "_pop_und": 22, "_popcount": 22, "_popleft": 42, "_pref": 22, "_prev": 25, "_propag": [32, 33, 42, 48, 49, 50, 74], "_q": [53, 54], "_query_count": [53, 54], "_r": 16, "_range_freq": 40, "_rebuild": 31, "_remov": 26, "_remove_bal": [23, 24], "_right": 22, "_right_splai": 42, "_root": [22, 26, 27, 48, 50], "_rotat": [48, 50], "_rotate_l": 22, "_rotate_left": [49, 56, 71], "_rotate_lr": 22, "_rotate_r": 22, "_rotate_right": [49, 56, 71], "_rotate_rl": 22, "_sigma": [40, 41], "_size": [22, 32, 33, 34, 40, 41, 53, 54, 61], "_splai": [42, 48, 50, 74], "_split_left": 42, "_split_nod": [49, 56, 71], "_split_right": 42, "_sum": 70, "_to_origin": 20, "_total": 22, "_tree": 44, "_up": [51, 52], "_updat": [42, 48, 49, 50, 71, 74], "_update_bal": 22, "_update_doubl": 74, "_update_par": 23, "_update_tripl": 74, "_v": 40, "_w": [17, 22, 35, 43], "_x": 17, "_xor128": 17, "_xor_val": [26, 27], "_y": 17, "_z": 17, "ab": [11, 94], "acc": [22, 28, 29, 30, 96], "access": [22, 28, 34, 37, 40, 41, 69], "action": [5, 6, 7, 8, 10], "action_id": 6, "actionid": 6, "actionidtyp": 6, "ad": 96, "add": [23, 24, 26, 27, 35, 43, 44], "add_edg": [53, 54, 78, 83], "add_group": 66, "add_left": 16, "add_point": 66, "add_queri": 16, "add_right": 16, "adjac": 8, "advanc": 12, "ahc": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 88], "algorithm": [6, 7, 8, 11, 12, 16, 17, 18, 19, 20, 21, 23, 24, 54, 63, 64, 70, 75, 77, 84, 85], "all_appli": [32, 33], "all_group_memb": 67, "all_prod": [30, 61], "all_propag": [32, 33], "all_root": 67, "all_sum": 30, "all_sum_i": 66, "all_sum_x": 66, "all_xor": [26, 27], "alpha": [49, 56, 71], "an": [6, 7, 12, 26, 27, 40, 41, 59, 69, 70, 84], "appli": [32, 33, 36, 49, 56], "apply_only_turn": [6, 7], "apply_op": [6, 7, 8], "apply_point": [32, 33], "arr": 74, "arrai": 47, "assert": [1, 6, 7, 11, 13, 16, 17, 18, 21, 22, 23, 24, 26, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 49, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 69, 71, 72, 74, 82, 96], "assoc_contain": [8, 35, 53, 54], "au": 96, "auto": [6, 7, 8, 14, 18, 22, 23, 24, 34, 35, 37, 40, 41, 42, 45, 46, 49, 53, 54, 56, 57, 65, 66, 67, 69, 70, 71, 76, 77, 78, 84, 85, 87, 95], "avl": 47, "avl_tree_bit_vector": [22, 40, 41], "avl_tree_multiset": 23, "avl_tree_set": 24, "avltreebitvector": [22, 40, 41], "avltreemultiset": 23, "avltreemultisetnod": 23, "avltreemultisetnodeptr": 23, "avltreeset": 24, "avltreesetnod": 24, "avltreesetnodeptr": 24, "b": [6, 7, 21, 22, 23, 24, 41, 42, 49, 51, 52, 55, 56, 70, 71, 92, 94, 96], "back": [6, 8, 19, 21, 22, 23, 24, 26, 27, 30, 31, 34, 37, 40, 41, 49, 51, 52, 56, 63, 64, 65, 66, 71, 72, 78, 95], "balanc": [23, 24, 49, 56, 71], "base": 96, "bbst": 47, "bbst_node": [23, 24, 25], "bbstnode": [23, 24, 25], "bd": 96, "beam": [5, 9, 10], "beam_depth": 8, "beam_depth_bas": 8, "beam_idx": 6, "beam_search": [2, 3, 4, 6, 7, 8], "beam_search_eul": 6, "beam_search_old": 8, "beam_search_with_tre": [4, 6, 7], "beam_turn": 8, "beam_width": [6, 7, 8], "beam_width_bas": 8, "beamparam": [6, 7], "beamsearch": 8, "beamsearchwithtre": [6, 7], "beerbash": 18, "begin": [6, 7, 8, 16, 17, 18, 20, 21, 23, 24, 31, 34, 37, 40, 45, 46, 51, 52, 58, 63, 64, 68, 69, 70, 75, 77, 85, 89, 95], "best": 6, "best_an": 12, "best_id": [6, 7], "best_scor": [6, 7, 12], "best_stat": 8, "beta": [49, 56, 71], "bf": [78, 81], "bfs_path": 75, "binari": 47, "binary_trie_multiset": 26, "binary_trie_set": 27, "binarytriemultiset": 26, "binarytrieset": 27, "bisect_left": 44, "bisect_right": 44, "bit": [26, 27, 40, 41, 47, 59, 69, 70], "bit_length": [36, 38, 39, 40, 41, 45, 46, 53, 54, 55, 69, 70], "bit_po": [34, 37], "bit_vector": [28, 69, 70], "bitvector": [28, 69, 70], "bl": 22, "book": 16, "bool": [6, 7, 8, 11, 12, 17, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 41, 42, 45, 46, 48, 50, 61, 63, 64, 65, 66, 67, 68, 72, 74, 78, 83, 92, 98], "break": [1, 6, 7, 8, 12, 22, 23, 24, 26, 27, 34, 40, 48, 49, 50, 51, 52, 55, 61, 69, 71, 74, 91, 92], "brief": [6, 7, 8, 14, 16, 17, 18, 20, 29, 32, 36, 40, 41, 42, 55, 64, 70, 76, 80, 82, 85], "bsize": 28, "bu": 96, "bucket_cnt": 59, "bucket_data": [34, 59], "bucket_max": [34, 37], "bucket_po": [34, 37], "bucket_s": 34, "bucketn": 37, "buff0": 41, "buff1": 41, "build": [23, 24, 28, 34, 37, 41, 42, 49, 56, 57, 69, 70, 71], "build_list": [79, 80], "build_prim": 85, "c": [22, 26, 42, 48, 50, 74, 76, 77, 78, 85, 87, 88], "calc_next_beam": 8, "cannot": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "cap": [70, 96], "case": 1, "cassert": [1, 6, 8, 13, 16, 17, 18, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 56, 58, 61, 62, 67, 68, 71, 74, 82, 96], "ceil": [34, 37], "cerr": [6, 7, 12, 56], "chang": 12, "char": [6, 22, 40], "check": [23, 24], "child": 7, "choic": [11, 17], "chrono": 14, "class": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 69, 70, 71, 72, 74, 79, 80, 82, 83, 85, 96], "clear": [6, 7, 8, 11, 13, 21, 26, 42, 45, 46, 67, 68, 71], "climit": 82, "cluster_cent": 11, "cluster_set": 11, "cmath": [12, 34, 37, 49, 56, 71], "cnode": [22, 23, 24, 49, 71], "cnt": [7, 12, 17, 21, 26, 40, 41, 69, 92], "col": 78, "color": 95, "com": [6, 18, 88, 96], "commut": 47, "composit": [32, 33, 36, 42, 48, 49, 56, 74], "connect": 47, "const": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96], "constexpr": [6, 22, 45, 46, 49, 56, 96], "construct": [8, 64], "constvector": 80, "contain": [21, 23, 24, 26, 27, 31, 45, 46, 63, 64], "contains_insert": [6, 7, 45, 46], "contains_set": 45, "continu": [6, 7, 8, 16, 23, 24, 42, 49, 56, 67, 71, 76, 77, 78, 79, 82, 83, 84, 87, 91, 92], "copi": [8, 13, 21, 55, 56, 57, 58], "count": [14, 21, 26, 63, 64], "count_rang": [63, 64], "cout": [6, 8, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 55, 56, 57, 61, 62, 63, 64, 67, 69, 71], "cpp": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "cpp_expand": 88, "cumsum": 70, "cumul": 47, "cumulative_sum": [30, 70], "cumulative_sum_2d": 29, "cumulativesum": [30, 70], "cumulativesum2d": 29, "curtim": 79, "cut": [42, 47, 73], "cx": 78, "d": [1, 6, 8, 11, 16, 18, 22, 34, 37, 42, 49, 56, 57, 67, 71, 76, 77, 78, 79, 92], "d_best_stat": 8, "data": [34, 36, 37, 38, 39, 42, 48, 49, 53, 54, 56, 57, 59, 62, 63, 64, 74, 96], "data_structur": [6, 7, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 82, 84, 88], "dd": 92, "debug": [7, 56], "debug_acc": 22, "decide_turn": 8, "default": 1, "defin": 6, "del": [7, 8, 13], "del_left": 16, "del_right": 16, "delete_edg": [53, 54], "dep": [79, 80], "dep_nxt": 79, "depth": 7, "dequ": 47, "detail": 85, "df": [23, 24, 41, 42, 56, 57], "dfsid": 78, "di": [45, 46], "dict": 47, "diff": [49, 56, 71, 72], "dijkstra": 81, "dijkstra_path": 77, "dik": 87, "dir": 6, "dir_or_leaf_id": 6, "discard": [23, 24, 26, 27], "discard_al": 26, "dist": [11, 75, 76, 77, 78, 87], "dist_path": 85, "disttyp": 11, "div": 90, "divis": 47, "done_depth": 8, "done_depth_tot": 8, "doubl": [8, 12, 14, 17, 49, 56, 71], "doxygenfil": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "dp_s1": 83, "dseg": 39, "dual": 47, "dual_commutative_segment_tre": 32, "dual_segment_tre": 33, "dualcommutativesegmenttre": 32, "dualsegmenttre": 33, "dynam": 47, "dynamic_bit_vector": 34, "dynamic_fenwick_tree_2d": 35, "dynamic_lazy_segment_tre": 36, "dynamic_list": 37, "dynamic_segment_tre": 38, "dynamic_segment_tree_init": 39, "dynamic_wavelet_matrix": 40, "dynamic_wavelet_tre": 41, "dynamicbitvector": 34, "dynamicfenwicktree2d": 35, "dynamiclazysegmenttre": 36, "dynamiclist": 37, "dynamicsegmenttre": 38, "dynamicsegmenttreeinit": 39, "dynamicwaveletmatrix": 40, "dynamicwavelettre": 41, "dynamicwavlettre": 40, "e": [21, 22, 26, 27, 29, 30, 32, 33, 36, 38, 39, 42, 48, 49, 54, 56, 57, 59, 62, 66, 74, 80, 82, 84], "edg": [18, 53, 54, 85], "edge_data": [53, 54], "eijir": 6, "elaps": [8, 12, 14], "elmtyp": 11, "els": [6, 8, 12, 13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31, 34, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 69, 70, 71, 74, 78, 79], "emplac": [13, 22, 34, 37, 40, 57, 67, 69, 75, 76, 77, 79], "emplace_back": [6, 7, 8, 11, 13, 16, 18, 19, 21, 22, 23, 24, 26, 27, 31, 34, 37, 40, 41, 42, 49, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 69, 70, 71, 72, 75, 77, 78, 84, 85, 87, 89, 91], "empti": [6, 7, 13, 21, 22, 23, 24, 26, 27, 31, 34, 37, 40, 49, 51, 52, 56, 57, 63, 64, 67, 69, 71, 72, 75, 76, 77, 78, 79, 82, 85], "end": [6, 7, 8, 11, 14, 16, 17, 20, 21, 22, 23, 24, 31, 34, 35, 37, 40, 42, 45, 46, 51, 52, 58, 63, 64, 67, 68, 69, 70, 75, 77, 85, 89, 95], "end_0": 41, "end_1": 41, "end_temp": 12, "end_timepoint": 14, "endl": [6, 7, 8, 12, 22, 23, 24, 26, 27, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 49, 51, 52, 55, 56, 57, 61, 62, 63, 64, 67, 69, 71], "entri": 6, "enum": 1, "eras": [7, 18, 20, 21, 24, 34, 37, 42, 64, 70, 85], "error": 6, "euler": [10, 47], "euler_tour_tre": 42, "eulertourtre": 42, "eval": 16, "evert": [48, 50, 74], "exist": [45, 46], "exist_r": 45, "exit": 59, "expos": [48, 50, 74], "ext": [8, 35, 53, 54], "extend": 96, "f": [32, 33, 36, 42, 48, 49, 53, 54, 56, 61, 74], "f1": 16, "f2": 16, "f3": 16, "f4": 16, "f5": 16, "factor": 91, "factori": 92, "fals": [1, 6, 7, 8, 11, 12, 17, 21, 22, 23, 24, 26, 27, 31, 34, 37, 42, 45, 46, 48, 50, 63, 64, 65, 66, 67, 68, 69, 72, 74, 78, 83, 92, 98], "fd": 22, "fenwick": 47, "fenwick_tre": 44, "fenwick_tree_2d": 43, "fenwicktre": 44, "fenwicktree2d": 43, "field\u521d\u671f\u8a2d\u5b9a": 8, "file": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "fill": [45, 46, 68], "find": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "find_kei": [23, 24], "find_kth": [23, 24], "finish": 6, "first": [11, 18, 22, 49, 53, 54, 71, 95], "first_act": 8, "first_clust": 11, "fit": 11, "flag": [11, 25], "flag01": 41, "floyd": 81, "friend": 7, "from": 76, "front": [8, 31, 75, 78], "function": 61, "fw": 44, "g": [41, 42, 67, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87], "g0": 41, "g1": 41, "g_v0": 79, "ge": [23, 24, 26, 27, 63, 64], "gen": [7, 8, 13, 45, 46], "gen_path": 18, "gen_random": 18, "get": [6, 7, 8, 13, 23, 24, 26, 32, 33, 35, 36, 38, 39, 43, 44, 45, 48, 49, 55, 56, 57, 59, 61, 62, 63, 64, 74, 80, 95, 96], "get_act": [6, 7, 8], "get_beam_depth": 8, "get_beam_width": 8, "get_best_nod": 7, "get_bucket": [34, 37], "get_cap": 96, "get_decide_turn": 8, "get_dist": [77, 85, 86, 87], "get_lcp": 96, "get_max": [26, 27, 51], "get_max_turn": 8, "get_maximum_independent_set": 83, "get_min": [26, 27, 52], "get_mod": 96, "get_mul": 96, "get_next_beam": [6, 7], "get_next_beam_recurs": 7, "get_par": 7, "get_path": [7, 77, 85, 87], "get_po": [45, 46], "get_primelist": 92, "get_result": [6, 7], "get_rev_act": 1, "get_scc": 78, "get_scor": [7, 8, 12], "get_siz": [7, 13], "get_true_scor": 12, "get_vertex": 42, "github": [16, 88], "gnode": [42, 48, 50, 74], "gomi": [8, 74], "gp_hash_tabl": 8, "graph": [75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88], "greater": [76, 77], "group_cnt": 74, "group_count": [42, 65, 66, 67, 72, 74], "group_memb": [67, 72], "group_numb": [42, 67], "group_sum": 66, "gt": [23, 24, 26, 27, 63, 64], "h": [22, 23, 24, 29, 35, 43, 45, 46, 49, 56, 59, 71, 79, 95], "h1": [29, 35, 43, 70, 96], "h2": [29, 35, 43, 70, 96], "hash": [6, 7, 8, 47, 97], "hash_dict": 45, "hash_polici": [8, 35], "hash_set": [6, 7, 46], "hash_str": 96, "hashdict": 45, "hashset": [6, 7, 46], "hashstr": 96, "hashstringbas": 96, "hashtyp": [6, 7, 8], "hash\u7b49\u306e\u4f7f\u7528\u3092\u60f3\u5b9a": 17, "hatenablog": 6, "head": [79, 80], "heap": [47, 69], "height": [23, 24, 49, 56, 71], "high_resolution_clock": 14, "hilbertord": 16, "histori": 8, "hl": [22, 23, 24], "hld": 81, "hld_segment_tre": 80, "hldsegmenttre": 80, "hpp": [8, 35, 53, 54], "hq": [40, 69, 76, 77], "hr": [22, 23, 24], "hsb": 96, "html": 16, "http": [6, 16, 18, 96], "i": [6, 7, 8, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 67, 69, 70, 71, 74, 78, 79, 82, 83, 85, 87, 89, 91, 92, 95, 96, 97], "i_i": 70, "id": [6, 13, 32, 33, 36, 42, 48, 49, 56, 74], "idx": [7, 59, 63, 64, 78], "idx_back": 31, "idx_front": 31, "id\u306b\u5bfe\u5fdc\u3059\u308bt\u3092\u4eee\u60f3\u7684\u306b\u524a\u9664\u3059\u308b": 13, "ij": 29, "includ": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 95, 96, 98], "independ": 81, "index": [21, 23, 24, 26, 27, 48, 50, 63, 64, 88], "index_right": [23, 24, 26, 27, 63, 64], "indextyp": [36, 38, 39], "indx": [22, 28], "inf": [6, 75, 76, 77, 85, 87], "info": [6, 12], "init": [6, 7, 8, 12, 13, 36, 47], "init_st": 8, "init_v": 39, "init_zh": 6, "inlin": 8, "inner_appli": 36, "inner_apply_op": 8, "inner_copi": 8, "inner_get": 36, "inner_prod": [36, 38, 39], "inner_set": [36, 38, 39], "insert": [11, 17, 18, 21, 22, 34, 37, 40, 41, 46, 49, 56, 69, 70, 71, 95], "int": [6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96, 98], "int_max": 82, "invb": 96, "invpow": 96, "io": 16, "iostream": [1, 6, 8, 14, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 51, 52, 56, 61, 62, 67, 68, 71, 89, 95], "iota": [16, 89], "iranai": 11, "is_all_sam": 8, "is_bipartit": 78, "is_don": [6, 8], "is_exist": [45, 46], "is_kaibun": 98, "is_leaf": [7, 36, 38, 39], "is_prim": [91, 92], "is_primel": 92, "is_root": [48, 50], "is_sort": [23, 24], "is_valid": 7, "isok": [49, 71], "it_h": 35, "it_j": 35, "item": 96, "j": [11, 16, 17, 21, 22, 29, 34, 35, 43, 62, 83, 87, 89, 91, 92], "k": [11, 17, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 69, 70, 71, 74, 79, 80, 87, 95, 96], "k1": 59, "k2": 59, "kaibun": 97, "keep": 8, "kei": [21, 22, 23, 24, 26, 27, 34, 36, 37, 42, 45, 46, 48, 49, 51, 52, 55, 56, 57, 58, 63, 64, 67, 71, 74], "keymoon": 96, "key\u304c\u3059\u3067\u306b\u3042\u308c\u3070tru": [45, 46], "kmean": 10, "kth_elm": 27, "kth_largest": [40, 41, 69], "kth_smallest": [40, 41, 69], "kyopro": 6, "l": [1, 8, 11, 16, 17, 21, 22, 23, 24, 28, 30, 32, 33, 36, 38, 39, 40, 41, 42, 44, 49, 53, 54, 56, 57, 59, 61, 62, 63, 64, 69, 70, 71, 82, 96], "l0": [21, 40, 41, 69, 70], "l1": [21, 40, 69], "l_": [49, 56, 71], "label": 11, "lambda\u95a2\u6570": 16, "last_act": 8, "lazi": [42, 47, 74], "lazy_f": 32, "lazy_link_cut_tre": 48, "lazy_wb_tre": 49, "lazylinkcuttre": 48, "lazywbtre": 49, "lca": [48, 50, 74, 79, 81], "lca_mul": 82, "le": [23, 24, 26, 27, 63, 64], "leader": 42, "leaf_id": 6, "left": [6, 7, 23, 24, 25, 26, 27, 36, 38, 39, 41, 42, 48, 49, 50, 55, 56, 57, 71], "left_kei": 22, "left_key_popcount": 22, "len": [20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 34, 37, 41, 45, 46, 49, 51, 52, 55, 56, 57, 62, 63, 64, 69, 71, 78], "length": [40, 69], "li": 16, "light": 47, "link": [42, 47, 73], "link_cut_tre": [50, 74], "linkcuttre": [50, 74], "list": 47, "lmax": [22, 49, 71], "lmax_bit_len": 22, "lmax_tot": 22, "ln": 74, "lnode": 74, "log": [12, 41, 62, 69, 70], "logn": [42, 51, 52, 55, 63, 64, 79, 80], "logu": 36, "long": [6, 7, 8, 16, 17, 22, 28, 34, 36, 37, 40, 42, 43, 45, 46, 53, 54, 86, 92, 96], "lower": [63, 64], "lower_bound": [20, 70], "lre": 61, "lsize": [56, 57], "lt": [18, 23, 24, 26, 27, 63, 64], "lx": 74, "ly": 74, "m": [12, 14, 22, 28, 45, 46, 83, 95], "main": [6, 7, 16], "make": 90, "make_pair": [22, 42, 70], "make_primelist": 91, "make_shar": [56, 57], "make_tupl": 7, "map": [32, 33, 35, 36, 42, 48, 49, 56, 67, 74, 89, 95], "mask30": 96, "mask31": 96, "mask61": 96, "math": [88, 89, 91], "matrix": 47, "max": [8, 20, 22, 23, 24, 34, 36, 37, 38, 39, 47, 49, 56, 71, 91, 92, 94], "max_heap": 51, "max_it": 11, "max_n": 16, "max_right": 61, "max_turn": [6, 7, 8], "maxheap": 51, "maximum": 81, "maximum_independent_set": 83, "maximumindependentset": 83, "mean": 11, "member": 67, "memori": [13, 36, 49, 56, 57, 71], "merg": [42, 48, 49, 50, 56, 71, 74], "microsecond": 14, "mid": [17, 22, 23, 24, 36, 38, 39, 42, 49, 56, 57, 63, 64, 69, 70, 71, 96], "midd": 96, "midu": 96, "min": [6, 7, 8, 11, 34, 36, 37, 38, 39, 47, 82, 87, 94], "min_d": 11, "min_dist": 85, "min_el": [6, 7, 8], "min_factor": 89, "min_heap": 52, "min_left": 61, "min_scor": 7, "min_termin": 85, "min_terminal_indx": 85, "min_tree_indx": 85, "minheap": 52, "minimum": 81, "minimum_spanning_tre": 84, "minimum_steiner_tre": 85, "minimumsteinertre": 85, "minmax": [53, 54, 85], "miss": [45, 63, 64], "mnode": [23, 24], "mo": 15, "mod": [92, 96], "modifi": 12, "modul": 88, "mp": 95, "msk": [45, 46], "mt19937": [45, 46, 96], "multiset": 47, "mx": [49, 56, 71], "my_random": 11, "mylazywbtre": 49, "mypersistentlazywbtre": 56, "mywbtre": 71, "n": [6, 11, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 37, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 91, 92, 95, 96], "name": 34, "namespac": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 95, 96, 98], "namespas": 58, "namspac": 82, "new": [6, 7, 8, 13, 23, 24, 36, 38, 39, 41, 42, 48, 49, 50, 55, 57, 58, 64, 71], "new_act": 6, "new_action_id": 6, "new_back": 31, "new_bit_len": 22, "new_front": 31, "new_hash": 8, "new_id": 13, "new_keep": 8, "new_kei": 22, "new_nod": [7, 22, 23, 24, 26, 27, 49, 55, 56, 58, 71], "new_scor": [8, 12], "new_stat": 8, "new_tre": 6, "next_beam": [6, 7], "next_beam_data": 6, "next_queri": [53, 54], "next_root": 7, "next_valu": [40, 69], "ng": 96, "nl": [16, 49, 71], "nlazi": 74, "nlog": 41, "nlogn": [18, 64, 82], "nmmintrin": 22, "nnode": [56, 74], "node": [7, 22, 23, 24, 26, 27, 36, 38, 39, 41, 42, 47, 48, 49, 50, 55, 56, 57, 58, 71, 74], "node_id": 8, "nodein": [79, 80, 82], "nodeout": [79, 80], "nodeptr": [25, 36, 38, 39, 42, 48, 49, 50, 55, 56, 57, 58, 71], "node\u4ee5\u4e0a\u306e\u30d1\u30b9\u3092\u8fd4\u3059": 7, "node\u4ee5\u4e0b\u3067": 7, "none": [53, 54], "normal": 17, "note": [17, 40], "now": [14, 19, 25, 78], "now_stat": 8, "now_tim": [8, 12], "now_turn": [6, 7], "nowstat": 8, "nr": [16, 49, 71], "nroot": 57, "nth_element": [6, 7, 8], "nullopt": [23, 24], "nullptr": [23, 24, 25, 36, 38, 39, 41, 42, 48, 49, 50, 55, 56, 57, 58, 71], "nxt": [62, 87], "nxt_hash": 6, "nxt_node": 7, "nxt_score": 6, "n\u8981\u7d20\u78ba\u4fdd\u3059\u308b": 13, "o": [1, 6, 7, 16, 17, 18, 21, 29, 36, 41, 42, 45, 46, 51, 52, 55, 63, 64, 79, 80, 82, 85, 87, 95], "object": [8, 64], "offlin": 47, "offline_dynamic_connect": 53, "offline_dynamic_connectivity_sum": 54, "offlinedynamicconnect": 53, "offlinedynamicconnectivitysum": 54, "ok": [22, 23, 24, 96], "old": 9, "old_exist": [45, 46], "old_kei": [45, 46], "old_val": 45, "onc": 28, "one": [40, 69, 70], "op": [8, 36, 38, 39, 42, 48, 49, 56, 57, 62, 74, 80], "oper": [1, 6, 7, 8, 21, 31, 45, 71, 95], "option": [23, 24], "osa_k": 89, "ostream": [1, 6, 7, 95], "other": [6, 7, 12, 49, 56, 71, 88, 95], "out": [16, 53, 54], "p": [18, 42, 48, 49, 50, 51, 52, 53, 54, 56, 71, 74, 91, 92, 95], "p_f": 11, "p_factor": 89, "p_factorization_map": 89, "page": 88, "pair": [6, 7, 8, 11, 17, 18, 19, 22, 34, 37, 40, 42, 45, 46, 49, 53, 54, 56, 65, 69, 70, 71, 76, 77, 84, 85, 86, 87, 95], "par": [6, 7, 8, 23, 24, 25, 26, 27, 41, 42, 48, 50, 67, 68, 72, 79, 80, 82], "param": [6, 7, 8, 12, 64, 76], "path": [22, 49, 56, 57, 71, 72, 81, 82, 85], "path_appli": [48, 74], "path_d": [49, 71], "path_kth_elm": [48, 50, 74, 79], "path_length": 74, "path_prod": [48, 74, 80], "pb_d": [8, 35, 53, 54], "persist": 47, "persistent_arrai": 55, "persistent_lazy_wb_tre": 56, "persistent_segment_tre": 57, "persistent_stack": 58, "persistentarrai": 55, "persistentlazywbtre": 56, "persistentsegmenttre": 57, "persistentstack": 58, "pnode": [23, 24, 42, 48, 49, 50, 56, 57, 71, 74], "po": [45, 46, 70], "pool": [8, 10, 42, 48, 50, 55], "pop": [13, 21, 22, 23, 24, 26, 27, 34, 37, 40, 41, 49, 51, 52, 56, 57, 58, 67, 69, 71, 75, 76, 77, 78, 79], "pop_back": [6, 23, 24, 31, 49, 51, 52, 56, 65, 66, 71, 72, 78], "pop_front": 31, "pop_max": [26, 27, 51], "pop_min": [26, 27, 52], "post_ord": 6, "pow": [36, 39, 92], "pow_mod": [92, 96], "powb": 96, "pprint": 21, "pragma": 28, "pre": [25, 44, 48, 50, 62, 74], "pre_act": 7, "pre_cap": 96, "pre_dir": 6, "pre_end": 22, "pre_hash": 6, "pre_ord": 6, "pre_scor": [6, 12], "pred": 8, "pred_acc": 8, "pred_total_cnt": 8, "pref": [30, 44], "prek": 34, "prev": [58, 75, 77], "prev_valu": [40, 69], "primelist": 90, "print": [6, 7, 8, 12, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 55, 56, 57, 61, 62, 63, 64, 67, 69, 71, 93], "print_green": [6, 95], "print_non": [6, 95], "print_r": [6, 95], "print_tre": 7, "printf": [49, 67, 71], "priority_queu": [40, 69, 76, 77], "privat": [6, 7, 8, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 69, 70, 71, 72, 79, 80, 82, 83, 85, 87, 96], "prod": [30, 36, 38, 39, 49, 56, 57, 61, 62, 80, 82], "propag": [36, 56], "ptr": [34, 37, 53, 54, 82], "ptr_edg": 42, "ptr_vertex": 42, "public": [6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 82, 83, 85, 87, 96], "push": [51, 52, 58, 78], "push_back": [8, 31, 34, 37], "push_front": 31, "pushpoop_max": 51, "pushpoop_min": 52, "px": [65, 66], "py": [65, 66, 88], "q": [16, 53, 54, 55], "qi": 16, "qiita": 96, "qu": 78, "quadrat": 47, "quadratic_division_set": 59, "quadraticdivisionset": 59, "query_count": 16, "queue": [40, 69, 75, 76, 77, 78], "r": [1, 8, 16, 17, 21, 22, 23, 24, 28, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 49, 53, 54, 56, 57, 59, 61, 62, 63, 64, 69, 70, 71, 82, 96], "r0": [21, 40, 41, 69, 70], "r1": [21, 40, 69], "rand": 96, "rand_pair": 17, "rand_u64": 17, "rand_vec": 17, "randdoubl": 17, "randint": [17, 18], "random": [6, 7, 11, 12, 15, 45, 46, 96], "random_devic": [45, 46, 96], "random_tre": 18, "randomtre": 18, "randrang": [17, 18], "rang": 16, "range_count": [40, 41, 69], "range_freq": [40, 41, 69], "rank": [22, 28, 34, 40, 41, 69], "rank0": [22, 28, 34, 40, 41, 69, 70], "rank1": [22, 28, 34, 40, 41, 69, 70], "rbegin": 21, "rd": [45, 46], "rdata": 48, "re": [17, 19, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 37, 42, 43, 44, 49, 51, 52, 55, 56, 57, 58, 61, 67, 71, 78, 79, 80, 91, 92, 96], "rebuild": [45, 46], "rec": [22, 42, 49, 71], "ref": [6, 16, 96], "rem_tim": 8, "remov": [21, 23, 24, 26], "remove_it": [23, 24], "rend": 21, "rep": 6, "replace_max": 51, "replace_min": 52, "reroot": 42, "reserv": [6, 8, 18, 21, 22, 23, 24, 26, 27, 31, 40, 49, 53, 54, 56, 57, 70, 71, 85], "reset": [8, 14], "resiz": [6, 21, 26, 27, 32, 33, 34, 37, 42, 44, 45, 46, 48, 50, 59, 61, 62, 74, 96], "result": [6, 7, 8], "ret": 89, "return": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 91, 92, 94, 95, 96, 98], "rev": [48, 49, 50, 56], "revers": [7, 8, 21, 31, 49, 56, 58, 75, 77], "rg": 78, "ri": 16, "right": [6, 7, 8, 23, 24, 25, 26, 27, 34, 36, 37, 38, 39, 41, 42, 48, 49, 50, 55, 56, 57, 71], "rle": 15, "rn": 74, "rnode": 74, "rollback": [6, 7, 12], "root": [7, 23, 24, 36, 38, 39, 41, 42, 48, 49, 50, 55, 56, 57, 65, 66, 67, 68, 71, 72, 74, 79, 81, 82], "root_": [49, 56, 71], "rooted_tre": 86, "rootedtre": 86, "rotate_left": [23, 24, 25], "rotate_lr": [23, 24, 25], "rotate_right": [23, 24, 25], "rotate_rl": [23, 24, 25], "rre": 61, "run": [16, 53, 54], "run_complex": 8, "run_each_turn": 8, "run_norm": 8, "rx": [16, 72, 74], "ry": [16, 72, 74], "s0": 41, "s1": [41, 83], "s_": [49, 56], "s_node": 7, "sa": 10, "sa_random": 12, "sa_run": 12, "sa_tim": 12, "same": [42, 48, 50, 65, 66, 67, 68, 72, 74, 84], "sb": [40, 41], "score": [6, 7, 8, 12], "score_keep": 8, "scoretyp": [6, 7, 8, 12], "search": [5, 9, 10, 88], "second": [11, 18, 19, 35, 45, 46, 49, 53, 54, 71, 95], "seen": [6, 7, 8, 17, 42, 67], "seg": 80, "segment": [47, 81], "segment_quadratic_divis": 60, "segment_tre": [61, 80], "segmenttre": [61, 80], "select": [22, 28, 34, 40, 41, 69], "select0": [22, 28, 34, 40, 41, 69], "select1": [22, 28, 34, 40, 41, 69], "select_remov": 41, "sep": 21, "set": [11, 18, 22, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 55, 56, 57, 61, 67, 69, 70, 71, 74, 80, 81, 89, 95], "set_point": 70, "set_vertex": 42, "shared_ptr": [36, 56, 57], "shift": 17, "short": [49, 71], "shuffl": [17, 18], "sigma": [40, 41, 69, 70], "size": [6, 7, 8, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 37, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 85, 87, 95, 96, 98], "size2": [53, 54], "slide": 18, "solut": 6, "soon": 88, "sort": [16, 20, 21, 23, 24, 51, 52, 63, 64, 70, 85], "sort_uniqu": 70, "space": [34, 36, 55], "span": 81, "spars": 47, "sparse_t": [62, 82], "sparset": [62, 82], "speakerdeck": 18, "split": [42, 48, 49, 50, 56, 71, 74], "sqrt": [34, 37, 49, 56, 59, 71, 92], "srand": 7, "st": [18, 23, 24, 79, 82], "stack": [13, 22, 47, 49, 54, 56, 57, 67, 71, 78, 79, 82], "start": [6, 14, 34, 37, 53, 54, 76, 78], "start_0": 41, "start_1": 41, "start_temp": 12, "start_timepoint": 14, "state": [6, 7, 8, 10, 12], "state_id": 13, "state_pool": [6, 7, 8, 13], "statepool": [7, 8, 13], "stateptr": 8, "state\u3092\u521d\u671f\u5316\u3059\u308b": [6, 7], "static": [6, 8, 18, 22, 25, 34, 36, 37, 38, 39, 45, 46, 47, 49, 56, 70, 82, 95, 96], "static_multiset": 63, "static_set": 64, "staticmultiset": 63, "staticset": 64, "std": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 95, 96, 98], "stdc": 59, "stdint": 22, "steiner": 81, "stop": [34, 37], "string": [21, 88, 95, 98], "struct": [6, 7, 8, 12, 27, 31, 33, 35, 36, 38, 39, 41, 42, 43, 44, 48, 50, 55, 57, 58, 61, 62, 63, 64, 68, 74, 77, 78, 86, 87, 89], "sub": 44, "sub_pool": 8, "substat": [7, 8], "substate_id": 8, "substate_pool": 7, "substateid": 7, "subtree_appli": 42, "subtree_prod": 80, "subtree_sum": 42, "suff": 44, "sum": [17, 21, 34, 35, 43, 44, 47, 59, 69], "swap": [6, 8, 16, 17, 21, 27, 48, 49, 50, 51, 52, 65, 66, 67, 68, 72, 74, 79, 80, 82], "swap_rang": 21, "switch": 1, "syuukei": 11, "t": [8, 11, 13, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 85, 87, 92, 94, 95], "t1": 95, "t2": 95, "t3": 95, "tabl": 47, "take44444": 16, "tbest_scor": 6, "temp_val": 12, "templat": [11, 13, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 85, 87, 94, 95], "termin": 85, "thi": [6, 7, 16, 18, 22, 23, 24, 30, 31, 32, 33, 36, 38, 39, 41, 45, 46, 48, 49, 50, 55, 56, 57, 58, 59, 61, 70, 71, 72, 80, 86, 96], "this_best_st": 8, "thread": 14, "threshold": 12, "threshold\u3092\u8d85\u3048\u305f\u3089": 12, "tie": [22, 42], "time": [36, 55, 82], "time_limit": [8, 12], "time_point": 14, "time_point_cast": 14, "time_since_epoch": 14, "timer": [6, 7, 8, 10, 12], "timestamp": 8, "titan23": [6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 96], "titan_cpplib": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "tmp": [11, 49, 56, 71], "tmp1": 42, "tmp2": 42, "tmpk": 11, "to_origin": 20, "to_zaatsu": 20, "todo": [6, 7, 8, 53, 54, 67, 75, 78], "tolist": [55, 57], "top": [13, 22, 40, 57, 58, 67, 69, 76, 77, 78, 79], "topk": [40, 69], "topological_sort": 78, "tot": [34, 37], "tot_on": 34, "tour": 47, "tovector": [21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 37, 40, 41, 44, 49, 55, 56, 58, 61, 71], "tparam": [29, 36, 40, 41, 42, 70, 76, 80], "tree": [5, 6, 10, 15, 47, 73, 81], "treenod": 7, "treenode_pool": 7, "treenodeid": 7, "trie": 47, "true": [6, 7, 8, 11, 12, 21, 22, 23, 24, 26, 27, 31, 36, 38, 39, 42, 45, 46, 48, 50, 57, 65, 66, 67, 68, 72, 74, 78, 79, 83, 92, 98], "try_op": [6, 7, 8], "try_op\u3057\u305f\u7d50\u679c\u3092\u30e1\u30e2\u3057\u3066\u304a\u304f\u69cb\u9020\u4f53": 7, "tsutaj": 18, "tupl": [6, 7, 22, 40, 53, 54, 66, 69, 70, 95], "turn": [6, 7, 8], "type": [12, 76], "typenam": [13, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 35, 37, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 69, 70, 72, 76, 77, 78, 79, 85, 87, 94, 95], "t\u6b21\u306e\u5019\u88dc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f": 6, "u": [1, 17, 18, 22, 25, 36, 38, 39, 42, 48, 49, 50, 51, 52, 53, 54, 56, 62, 71, 74, 78, 79, 80, 82, 83, 84], "u64": [28, 45, 46, 96], "u64_max": 17, "u_": [36, 38, 39], "u_nod": 42, "uf": [53, 54, 84], "uint128": 22, "uint64": 22, "uint8_t": [8, 22, 34, 40, 41], "undo": [53, 54, 65, 66], "undoabl": 47, "undoable_union_find": [53, 65], "undoable_union_find_sum": [54, 66], "undoableunionfind": [53, 65], "undoableunionfindsum": [54, 66], "uniform_int_distribut": [45, 46, 96], "union": 47, "union_find": [67, 84], "union_find_light": 68, "unionfind": [67, 84], "unionfindlight": 68, "uniqu": [20, 24, 64, 70, 85], "unit": [53, 54, 65, 66, 67, 68, 72, 84, 96], "unordered_map": [35, 42, 53, 54], "unordered_set": [17, 95], "unsign": [6, 7, 8, 17, 22, 26, 27, 28, 40, 45, 46, 96], "unused_indx": 13, "upd": 12, "upd_cnt": 12, "updat": [23, 24, 25, 36, 38, 39, 56, 57], "update_tre": [6, 7], "upper": [63, 64], "us": [1, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 95, 96, 98], "used_item": 20, "used_vertex": 85, "uv": [53, 54], "uv_nod": 42, "v": [17, 18, 21, 22, 23, 28, 31, 32, 33, 34, 37, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 95], "v_node": 42, "val": [23, 36, 38, 39, 42, 45, 67], "valid": 6, "valsiz": 23, "vec": 41, "vector": [6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96], "verbos": [6, 7, 8, 12], "view": 88, "visit": 78, "void": [6, 7, 8, 12, 13, 14, 16, 17, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 78, 79, 80, 83, 91, 96], "vu_nod": 42, "w": [8, 17, 29, 35, 43, 44, 45, 46, 70, 72], "w1": [29, 35, 43, 70], "w2": [29, 35, 43, 70], "warshal": 81, "warshall_floyd_path": [85, 87], "wavelet": 47, "wavelet_matrix": 69, "wavelet_matrix_cumulative_sum": 70, "waveletmatrix": 69, "waveletmatrixcumulativesum": 70, "wb": 47, "wb_tree": 71, "wbtree": 71, "weight": [47, 76], "weight_union_find": 72, "weightedunionfind": 72, "while": [6, 7, 8, 11, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 85, 89, 91, 92, 95, 96], "x": [11, 16, 17, 18, 20, 21, 23, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 82, 87, 92, 95, 96], "xd": 96, "xor": 17, "xor_": [45, 46], "xu": 96, "xy": 70, "y": [16, 23, 40, 41, 42, 65, 66, 67, 68, 69, 70, 72, 74, 92], "y_": 70, "z": 74, "zaatsu": 15, "zero": [40, 69, 70], "zobrist": 17, "\u03c3": 41, "\u304b\u3089\u306a\u308b\u96c6\u5408\u3092\u7ba1\u7406\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210": 20, "\u304c\u3042\u308c\u3070\u524a\u9664\u3059\u308b": 42, "\u304c\u306a\u3051\u308c\u3070\u8ffd\u52a0\u3059\u308b": 42, "\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b": 88, "\u304c\u6210\u308a\u7acb\u3064": 36, "\u3057\u3066\u8fd4\u3057": [51, 52], "\u3059\u308b\u3088\u308a\u3082\u9ad8\u901f": 41, "\u305d\u3046\u3067\u306a\u3044\u3068\u304d": 6, "\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b": 13, "\u305f\u3060\u3057": 42, "\u3067\u52d5\u304d\u307e\u3059": 88, "\u3067\u6607\u9806": 41, "\u3067\u964d\u9806": 41, "\u3068\u3057\u3066\u524d\u8a08\u7b97\u3092\u3059\u308b": 82, "\u3068\u540c\u3058": [51, 52], "\u306a\u3051\u308c\u3070\u633f\u5165\u3057\u3066fals": [45, 46], "\u306b\u3057\u3066\u8fd4\u3059": [41, 55], "\u306b\u3059\u308b": 42, "\u306b\u542b\u307e\u308c\u308b": 69, "\u306b\u5909\u66f4": 42, "\u306b\u5909\u66f4\u3057\u305f\u6c38\u7d9a\u914d\u5217\u3092\u8fd4\u3059": 55, "\u306b\u5bfe\u5fdc\u3059\u308b": 13, "\u306b\u5bfe\u5fdc\u3059\u308bt\u3092\u30b3\u30d4\u30fc\u3057": 13, "\u306b\u66f4\u65b0\u3059\u308b": [36, 41, 80], "\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059": 69, "\u306e\u30b3\u30d4\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059": 13, "\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059": 13, "\u306e\u4e2d\u3067": 69, "\u306e\u4e71\u6570\u3092\u8fd4\u3059": 17, "\u306e\u4f4d\u7f6e\u3092\u8fd4\u3057\u3066\u524a\u9664\u3059\u308b": 41, "\u306e\u4f4d\u7f6e\u3092\u8fd4\u3059": 41, "\u306e\u500b\u6570\u3092\u8fd4\u3057\u307e\u3059": 69, "\u306e\u500b\u6570\u3092\u8fd4\u3059": 41, "\u306e\u5024\u3092": [41, 42, 80], "\u306e\u5024\u3092\u524a\u9664\u3057\u3066\u8fd4\u3059": 41, "\u306e\u5024\u3092\u53d6\u5f97": 42, "\u306e\u5024\u3092\u8fd4\u3059": [55, 80], "\u306e\u5217\u306b\u5bfe\u3059\u308b": 16, "\u306e\u5217\u3092\u7ba1\u7406\u3059\u308b": 36, "\u306e\u533a\u9593\u3092\u7ba1\u7406\u3059\u308b": 36, "\u306e\u548c\u3092\u8fd4\u3059": 29, "\u306e\u5b58\u5728\u5224\u5b9a": [63, 64], "\u306e\u65b9\u304c\u5e73\u5747\u7684\u306b\u306f\u9ad8\u901f\u304b\u3082\u3057\u308c\u307e\u305b\u3093": 40, "\u306e\u7570\u306a\u308b\u4e71\u6570\u30922\u3064\u8fd4\u3059": 17, "\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059": [63, 64], "\u306e\u89aa\u306f": 42, "\u306e\u8fba\u96c6\u5408\u3092\u8fd4\u3059": 18, "\u306e\u90e8\u5206\u6728\u306e\u7dcf\u7a4d\u3092\u8fd4\u3059": 80, "\u306e\u96c6\u7d04\u5024\u3092\u8fd4\u3059": 36, "\u306f\u975econst": 17, "\u3078\u306e\u30d1\u30b9\u306e\u7dcf\u7a4d\u3092\u8fd4\u3059": 80, "\u3088\u308a\u5927\u304d\u304f\u3066\u6700\u5c0f": [63, 64], "\u3088\u308a\u8a73\u7d30\u306a\u6a5f\u80fd\u306f": 88, "\u3092k\u56de\u7e70\u308a\u8fd4\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u95a2\u6570": 36, "\u3092\u3057\u305f\u3068\u304d\u306e\u8a55\u4fa1\u5024\u3068\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8fd4\u3059": [6, 7], "\u3092\u3059\u308b": [6, 7], "\u3092\u3082\u3068\u306b\u69cb\u7bc9\u3059\u308b": 55, "\u3092\u30a4\u30f3\u30d7\u30ec\u30fc\u30b9\u306b\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b": 17, "\u3092\u4f5c\u6210\u3057": 13, "\u3092\u4f5c\u6210\u3059\u308b": [36, 41], "\u3092\u4f5c\u7528": 42, "\u3092\u4f5c\u7528\u3055\u305b\u308b": 36, "\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044": 88, "\u3092\u524a\u9664\u3059\u308b": 42, "\u3092\u542b\u3080\u30b7\u30e5\u30bf\u30a4\u30ca\u30fc\u6728\u306e\u8fba\u96c6\u5408\u3092\u8fd4\u3059": 85, "\u3092\u5ea7\u6a19\u5727\u7e2e\u3059\u308b": 20, "\u3092\u623b\u3059": [6, 7, 20], "\u3092\u633f\u5165\u3059\u308b": [41, 51, 52], "\u3092\u63a8\u5968": 36, "\u3092\u6839\u3068\u3059\u308b\u90e8\u5206\u6728\u306b": 42, "\u3092\u6839\u3068\u3059\u308b\u90e8\u5206\u6728\u306e\u7dcf\u548c": 42, "\u3092\u6c42\u3081\u308b": 82, "\u3092\u8fd4\u3059": [6, 7, 13, 14, 79], "\u3092\u8ffd\u52a0\u3059\u308b": [16, 42, 51, 52], "\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210": 16, "\u30aa\u30f3\u30e9\u30a4\u30f3\u30b8\u30e3\u30c3\u30b8\u306b\u63d0\u51fa\u3059\u308b\u3068\u304d\u306f": 88, "\u30af\u30a8\u30ea": 16, "\u30b3\u30d4\u30fc\u5148\u306eid\u3092\u8fd4\u3059": 13, "\u30b9\u30b3\u30a2\u306f\u5c0f\u3055\u3044\u307b\u3069\u3088\u3044": 8, "\u30b9\u30b3\u30a2\u521d\u671f\u8a2d\u5b9a\u306a\u3069": 8, "\u30bb\u30b0\u6728\u642d\u8f09hld": 80, "\u30bf\u30fc\u30f3\u6570": [6, 7], "\u30ce\u30fc\u30c9\u30d7\u30fc\u30eb\u30af\u30e9\u30b9": 13, "\u30d1\u30b9\u30b0\u30e9\u30d5": 18, "\u30d3\u30fc\u30e0\u3092\u7d5e\u308b": [6, 7], "\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1\u306e\u904e\u7a0b\u3092\u8868\u3059\u6728": 6, "\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1\u306e\u904e\u7a0b\u3092\u8868\u3059\u6728\u306e\u30ce\u30fc\u30c9": 7, "\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1\u3092\u3059\u308b": [6, 7], "\u30d3\u30fc\u30e0\u5e45\u3092\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u69cb\u9020\u4f53": [6, 7], "\u30d7\u30ea\u30e0\u6cd5\u3092\u7528\u3044\u305f\u8fd1\u4f3c\u89e3\u6cd5\u306e\u5b9f\u88c5": 85, "\u30db\u30f3\u30c8\u306b\u30e9\u30f3\u30c0\u30e0\u4e00\u69d8": 18, "\u30e2\u30ce\u30a4\u30c9\u306e2\u9805\u6f14\u7b97": 36, "\u30e2\u30ce\u30a4\u30c9\u306e\u5358\u4f4d\u5143": 36, "\u30e2\u30ce\u30a4\u30c9\u306e\u578b": 36, "\u30e9\u30f3\u30c0\u30e0\u306a\u6728": 18, "\u30e9\u30f3\u30c0\u30e0\u306a\u6728\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf": 18, "\u30e9\u30f3\u30c0\u30e0\u306a\u6728\u306e\u8fba\u96c6\u5408\u3092\u8fd4\u3059": 18, "\u30ea\u30bb\u30c3\u30c8\u3059\u308b": 14, "\u30ed\u30b0\u51fa\u529b\u3059\u308b\u304b\u3069\u3046\u304b": 6, "\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306f\u3059\u3079\u3066action\u306b\u30e1\u30e2\u3057\u3066\u304a\u304f": [6, 7], "\u4e00\u3064\u524d\u304c\u884c\u304d\u304c\u3051\u306a\u3089": 6, "\u4e00\u5ea6\u306e\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1\u3067": 8, "\u4e00\u672c\u9053\u306a\u306e\u3067\u884c\u304f\u3060\u3051": 6, "\u4e00\u672c\u9053\u306f\u884c\u304f\u3060\u3051": 7, "\u4e0d\u8981\u306anode\u3092\u524a\u9664\u3057": [6, 7], "\u4e71\u6570\u751f\u6210\u30af\u30e9\u30b9": 17, "\u4ee3\u8868\u5143": 42, "\u4ee5\u4e0a": [41, 69], "\u4ee5\u4e0a\u3067\u6700\u5c0f": [63, 64], "\u4ee5\u4e0b\u3067\u6700\u5927": [63, 64], "\u4ee5\u4e0b\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059": [63, 64], "\u4f4d\u7f6e": [41, 55], "\u4f55\u30bf\u30fc\u30f3\u5148\u307e\u3067\u8aad\u3080\u304b": 8, "\u4f55\u30bf\u30fc\u30f3\u5148\u3092\u6c7a\u3081\u308b\u304b": 8, "\u4f5c\u7528\u304c\u53ef\u63db\u306a\u53cc\u5bfe\u30bb\u30b0\u6728": 32, "\u4f5c\u7528\u7d20\u306e\u578b": 36, "\u4f7f\u7528\u3057\u306a\u3044\u5024": 64, "\u500b\u8fd4\u3057\u307e\u3059": 69, "\u500b\u9032\u3093\u3060\u9802\u70b9\u3092\u8fd4\u3059": 79, "\u5024\u306e\u578b": 41, "\u5024\u3092\u8fd4\u3057\u307e\u3059": 69, "\u5168\u3066\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b": [45, 46], "\u5185\u90e8\u30b5\u30a4\u30ba\u3092\u547c\u3073\u51fa\u3059": 13, "\u521d\u671f\u5024": 36, "\u524a\u9664\u3057\u3066\u8ffd\u52a0\u3057\u306a\u3044": 6, "\u52d5\u7684\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u6728": 41, "\u52d5\u7684\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u884c\u5217": 40, "\u52d5\u7684\u6728": 42, "\u533a\u9593": 41, "\u5404\u8981\u7d20\u304c": 41, "\u548c\u304c\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3057\u306a\u3044\u3053\u3068\u304c\u6761\u4ef6\u304b\u306a": 36, "\u56de": 41, "\u5b50\u304c\u306a\u3044\u3068\u304d": 36, "\u5b9f\u6570": 17, "\u5c0f\u3055\u3044": 69, "\u5e30\u308a\u304c\u3051\u306a\u3089": 6, "\u5e45": 8, "\u5ea7\u6a19\u5727\u7e2e\u3055\u308c\u305f": 20, "\u5ea7\u6a19\u5727\u7e2e\u7ba1\u7406\u30af\u30e9\u30b9": 20, "\u5fc5\u8981\u306a\u3068\u3053\u308d\u3060\u3051\u4f5c\u308b\u9045\u5ef6\u30bb\u30b0\u6728": 36, "\u5fc5\u8981\u306a\u6700\u5927\u6570\u306e\u5e73\u65b9\u6839": 91, "\u63a2\u7d22\u6728\u306e\u66f4\u65b0": [6, 7], "\u6574\u6570": 17, "\u65b0\u305f\u306b": [51, 52], "\u6607\u9806": [63, 64], "\u6642\u9593": [85, 87], "\u6642\u9593\u8a08\u6e2c\u30af\u30e9\u30b9": 14, "\u66f4\u65b0": 7, "\u6700\u5927\u306e\u8981\u7d20\u3092": 51, "\u6700\u5927\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u8fd4\u3059": 51, "\u6700\u5927\u306e\u8981\u7d20\u3092\u8fd4\u3059": 51, "\u6700\u5c0f\u306e\u8981\u7d20\u3092": 52, "\u6700\u5c0f\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u8fd4\u3059": 52, "\u6700\u5c0f\u306e\u8981\u7d20\u3092\u8fd4\u3059": 52, "\u6700\u5c0f\u30b7\u30e5\u30bf\u30a4\u30ca\u30fc\u6728\u306a\u3069": 85, "\u6700\u5c0f\u5168\u57df\u6728\u306e\u8fba\u96c6\u5408\u3092\u8fd4\u3059": 84, "\u6700\u5c0f\u5316": 12, "\u6728\u3092\u66f4\u65b0\u3059\u308b": [6, 7], "\u6728\u4e0a\u306e\u30d3\u30fc\u30e0\u30b5\u30fc\u30c1\u30e9\u30a4\u30d6\u30e9\u30ea": [6, 7], "\u672a\u6e80\u3067\u3042\u308b\u3088\u3046\u306a\u8981\u7d20\u306e\u3046\u3061\u6700\u5927\u306e\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059": 69, "\u672a\u6e80\u3067\u3042\u308b\u8981\u7d20\u306e\u500b\u6570\u3092\u8fd4\u3057\u307e\u3059": 69, "\u672a\u6e80\u3067\u6700\u5927": [63, 64], "\u672a\u6e80\u306e\u8981\u7d20\u306e\u500b\u6570\u3092\u8fd4\u3059": 41, "\u672a\u6e80\u306e\u8981\u7d20\u306e\u6570\u3092\u8fd4\u3059": 69, "\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059": [63, 64], "\u6839": 82, "\u6839\u3092": 42, "\u6b21\u306e\u30d3\u30fc\u30e0\u5019\u88dc\u3092\u4fdd\u6301\u3059\u308b\u914d\u5217": 6, "\u6b21\u306e\u30d3\u30fc\u30e0\u5019\u88dc\u3092\u6c42\u3081\u308b": [6, 7], "\u6c38\u7d9a\u914d\u5217": 55, "\u6c38\u7d9a\u914d\u5217\u5168\u4f53\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8fd4\u3059": 55, "\u6df1\u3055": 8, "\u6dfb\u3048\u5b57\u3092\u8868\u3059\u30a4\u30f3\u30c7\u30c3\u30af\u30b9": 36, "\u70b9\u306e\u5ea7\u6a19\u3092\u8868\u3059\u578b": 70, "\u7121\u3051\u308c\u3070\u81ea\u5206\u3092\u8fd4\u3059": 7, "\u73fe\u72b6\u614b\u304b\u3089\u9077\u79fb\u53ef\u80fd\u306a": [6, 7], "\u756a\u76ee\u306b": 69, "\u756a\u76ee\u306e": [41, 69], "\u756a\u76ee\u306e\u5024\u3092": 36, "\u756a\u76ee\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b": 36, "\u756a\u76ee\u306e\u5024\u3092\u8fd4\u3059": 41, "\u756a\u76ee\u306e\u8981\u7d20\u3092\u8fd4\u3059": [41, 63, 64], "\u7591\u4f3c": 17, "\u7a7a\u304b\u3069\u3046\u304b": [63, 64], "\u7a7a\u9593": [85, 87], "\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059": 88, "\u7b46\u8005\u306b\u305d\u3053\u307e\u3067\u3084\u308b\u6c17\u304c\u306a\u3044\u305f\u3081\u898f\u6a21\u306f\u63a7\u3048\u3081\u3067\u3059": 88, "\u7b54\u3048\u3092\u5fa9\u5143\u3059\u308b": [6, 7], "\u7d42\u4e86\u6761\u4ef6": 6, "\u7d4c\u904e\u6642\u9593": 14, "\u8449": 7, "\u8449\u304b\u3064\u6700\u3082\u8a55\u4fa1\u5024\u306e\u826f\u3044\u30ce\u30fc\u30c9\u3092\u898b\u308b\u3051\u308b": 7, "\u8449\u306e\u3068\u304d": 6, "\u8449\u306f\u30bf\u30fc\u30f3\u6570\u304b\u3089\u306f\u5224\u65ad\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u6ce8\u610f": 7, "\u884c\u304d\u304c\u3051\u304b\u3064\u5e30\u308a\u304c\u3051\u306eaction_id\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u306a\u3089": 6, "\u884c\u304d\u304c\u3051\u306a\u3089": 6, "\u8868\u793a\u3059\u308b": [41, 51, 52, 63, 64], "\u8981\u7d20\u306e\u7a2e\u985e\u6570\u3092\u8fd4\u3059": 20, "\u8981\u7d20\u3092\u51fa\u73fe\u56de\u6570\u304c\u591a\u3044\u9806\u306b\u305d\u306e\u983b\u5ea6\u3068\u3068\u3082\u306b": 69, "\u8981\u7d20\u6570\u3092\u8fd4\u3059": [41, 51, 52, 55, 63, 64], "\u89aa\u306e\u8a55\u4fa1\u5024\u3082\u53c2\u8003\u306b\u3059\u308b\u306a\u3069": 7, "\u89aa\u3092\u8fd4\u3059": 7, "\u89e3\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f": 6, "\u8a55\u4fa1\u5024\u304c\u4e00\u81f4\u3057\u305f\u5834\u5408": 7, "\u8fba": 42, "\u8ffd\u52a0\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u4e00\u62ec\u51e6\u7406\u3059\u308b": 16, "\u9014\u4e2d\u7d50\u679c\u306e\u30b9\u30b3\u30a2\u3092\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u3059\u308b\u304b\u3069\u3046\u304b": 7, "\u9023\u7d50\u5224\u5b9a": 42, "\u9023\u7d50\u6210\u5206\u306e\u500b\u6570\u3092\u8fd4\u3059": 42, "\u9045\u5ef6\u30bb\u30b0\u6728\u306e\u30a2\u30ec": 36, "\u9069\u5207\u306a\u30d1\u30b9\u3092\u8a2d\u5b9a\u3057\u305f\u4e0a\u3067": 88, "\u9069\u5f53\u306b\u8868\u793a\u3059\u308b": 36, "\u914d\u5217": 55, "\u91cd\u307f\u3092\u8868\u3059\u578b": 70, "\u9577\u3055": 16, "\u96a3\u63a5\u30ea\u30b9\u30c8": 82, "\u96a3\u63a5\u30ea\u30b9\u30c8\u304b\u3089\u69cb\u7bc9\u3059\u308b": 42, "\u9759\u7684\u306a\u30b0\u30e9\u30d5\u306b\u5bfe\u3057lca\u3092\u6c42\u3081\u308b\u3060\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea": 82, "\u9759\u7684\u306a\u5168\u9806\u5e8f\u96c6\u5408\u3092\u7ba1\u7406\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020": 64, "\u9802\u70b9": 80, "\u9802\u70b9\u96c6\u5408": 82}, "titles": ["__pycache__", "action", "action", "beam search", "beam search with tree", "ahc/beam_search", "beam search euler", "beam search with tree", "beam search old", "ahc/gomi", "ahc", "kmeans", "sa", "state pool", "timer", "algorithm", "mo", "random", "random tree", "rle", "zaatsu", "array", "avl tree bit vector", "avl tree multiset", "avl tree set", "bbst node", "binary trie multiset", "binary trie set", "bit vector", "cumulative sum 2D", "cumulative sum", "deque", "dual commutative segment tree", "dual segment tree", "dynamic bit vector", "dynamic fenwick tree 2D", "dynamic lazy segment tree", "dynamic list", "dynamic segment tree", "dynamic segment tree init", "dynamic wavelet matrix", "dynamic wavelet tree", "euler tour tree", "fenwick tree 2D", "fenwick tree", "hash dict", "hash set", "data_structures", "lazy link cut tree", "lazy wb tree", "link cut tree", "max heap", "min heap", "offline dynamic connectivity", "offline dynamic connectivity sum", "persistent array", "persistent lazy wb tree", "persistent segment tree", "persistent stack", "quadratic division set", "segment quadratic division", "segment tree", "sparse table", "static multiset", "static set", "undoable union find", "undoable union find sum", "union find", "union find light", "wavelet matrix", "wavelet matrix cumulative sum", "wb tree", "weight union find", "gomi", "link cut tree", "bfs path", "dijkstra", "dijkstra path", "graph", "hld", "hld segment tree", "graph", "lca", "maximum independent set", "minimum spanning tree", "minimum steiner tree", "rooted tree", "warshall floyd path", "Welcome to titan_cpplib\u2019s documentation!", "divs", "math", "make primelist", "math", "others", "other", "print", "hash string", "string", "is kaibun"], "titleterms": {"": 88, "2d": [29, 35, 43], "__pycache__": 0, "action": [1, 2], "ahc": [5, 9, 10], "algorithm": 15, "arrai": [21, 55], "avl": [22, 23, 24], "bbst": 25, "beam": [3, 4, 6, 7, 8], "beam_search": 5, "bf": 75, "binari": [26, 27], "bit": [22, 28, 34], "commut": 32, "connect": [53, 54], "cumul": [29, 30, 70], "cut": [48, 50, 74], "data_structur": 47, "dequ": 31, "dict": 45, "dijkstra": [76, 77], "div": 89, "divis": [59, 60], "document": 88, "dual": [32, 33], "dynam": [34, 35, 36, 37, 38, 39, 40, 41, 53, 54], "euler": [6, 42], "fenwick": [35, 43, 44], "find": [65, 66, 67, 68, 72], "floyd": 87, "gomi": [9, 73], "graph": [78, 81], "hash": [45, 46, 96], "heap": [51, 52], "hld": [79, 80], "how": 88, "i": 98, "independ": 83, "init": 39, "kaibun": 98, "kmean": 11, "lazi": [36, 48, 49, 56], "lca": 82, "librari": 88, "light": 68, "link": [48, 50, 74], "list": 37, "make": 91, "math": [90, 92], "matrix": [40, 69, 70], "max": 51, "maximum": 83, "min": 52, "minimum": [84, 85], "mo": 16, "multiset": [23, 26, 63], "node": 25, "offlin": [53, 54], "old": 8, "other": [93, 94], "overview": 88, "path": [75, 77, 87], "persist": [55, 56, 57, 58], "pool": 13, "primelist": 91, "print": 95, "quadrat": [59, 60], "random": [17, 18], "rle": 19, "root": 86, "sa": 12, "search": [3, 4, 6, 7, 8], "segment": [32, 33, 36, 38, 39, 57, 60, 61, 80], "set": [24, 27, 46, 59, 64, 83], "span": 84, "spars": 62, "stack": 58, "state": 13, "static": [63, 64], "steiner": 85, "string": [96, 97], "sum": [29, 30, 54, 66, 70], "tabl": 62, "timer": 14, "titan_cpplib": 88, "tour": 42, "tree": [4, 7, 18, 22, 23, 24, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 48, 49, 50, 56, 57, 61, 71, 74, 80, 84, 85, 86], "trie": [26, 27], "undoabl": [65, 66], "union": [65, 66, 67, 68, 72], "us": 88, "vector": [22, 28, 34], "warshal": 87, "wavelet": [40, 41, 69, 70], "wb": [49, 56, 71], "weight": 72, "welcom": 88, "zaatsu": 20, "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5": 88, "\u30b3\u30fc\u30c9\u5c55\u958b": 88, "\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "\u4ed5\u69d8": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 98], "\u4f7f\u7528\u4f8b": 88, "\u691c\u7d22": 88}})
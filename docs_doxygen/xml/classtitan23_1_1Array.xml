<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtitan23_1_1Array" kind="class" language="C++" prot="public">
    <compoundname>titan23::Array</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtitan23_1_1Array_1ac6489de83a427bc5725340a4a0f4d6d8" prot="private" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::Array&lt; T &gt;::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="13" column="12" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtitan23_1_1Array_1a2e02c73249832591fc87745f065d0564" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::Array&lt; T &gt;::Array</definition>
        <argsstring>()</argsstring>
        <name>Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="16" column="5" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a775f76422723cab9abe27366a35c1213" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::Array&lt; T &gt;::Array</definition>
        <argsstring>(const int n)</argsstring>
        <name>Array</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="17" column="5" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a3ec011088b4aab902ea95bf47435b965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::Array&lt; T &gt;::Array</definition>
        <argsstring>(const int n, const T &amp;key)</argsstring>
        <name>Array</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="18" column="5" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a76a8eeee66e80309ef8ff918ca7218bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::Array&lt; T &gt;::Array</definition>
        <argsstring>(const vector&lt; T &gt; &amp;v)</argsstring>
        <name>Array</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="19" column="5" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a0e18247476d92c295214e8bf543b33e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::emplace_back</definition>
        <argsstring>(const T key)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>const T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="21" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1afff6d51ec5b8b52ce0cdb7369a0bbc4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::resize</definition>
        <argsstring>(const int n, const T &amp;e)</argsstring>
        <name>resize</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="25" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a7d52afdf22debf3a80bf33faee7a500b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::reserve</definition>
        <argsstring>(const int n)</argsstring>
        <name>reserve</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="30" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1aa3476b685402c6dea5899f544bbfcbd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::Array&lt; T &gt;::sum</definition>
        <argsstring>(T e) const</argsstring>
        <name>sum</name>
        <param>
          <type>T</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="35" column="7" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a927575c163eb2d6c0f504c91777d543d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::Array&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="41" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a768912601c13a7c762fc4f3f7470f37f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::sort</definition>
        <argsstring>(bool reverse=false)</argsstring>
        <name>sort</name>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="45" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a61987d4c8d0888850af4496747d77350" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Array&lt; T &gt;::index</definition>
        <argsstring>(T &amp;key) const</argsstring>
        <name>index</name>
        <param>
          <type>T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="53" column="9" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a3a066cb6a215790d033284d486a34a03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Array&lt; T &gt;::count</definition>
        <argsstring>(const T &amp;key) const</argsstring>
        <name>count</name>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="60" column="9" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1abb14b19eee00fcccbe15c92f283aff8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="68" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1ac56780df6a1b95a8e192ed8867d96a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::insert</definition>
        <argsstring>(const int i, const T &amp;key)</argsstring>
        <name>insert</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="72" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1ae1c1dc0b6156bdfc5ad3c069b9481db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::Array&lt; T &gt;::pop</definition>
        <argsstring>(int i=-1)</argsstring>
        <name>pop</name>
        <param>
          <type>int</type>
          <declname>i</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="77" column="7" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a8b7ae2faed800e20e90311fc674965ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::remove</definition>
        <argsstring>(T &amp;key)</argsstring>
        <name>remove</name>
        <param>
          <type>T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="84" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a35a968b97910b7b4aa0816021a537c71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::reverse</definition>
        <argsstring>()</argsstring>
        <name>reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="88" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a497f2613b16d9703512197182a88f148" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::reverse</definition>
        <argsstring>(int l, int r)</argsstring>
        <name>reverse</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="95" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1aa99af80e8dc13f0f426cabd87bbe350c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::swap</definition>
        <argsstring>(const int i, const int j)</argsstring>
        <name>swap</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="105" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1ac5e6f6576c98d47c09d9e0c37ef2059a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::swap_range</definition>
        <argsstring>(int l0, int r0, int l1, int r1)</argsstring>
        <name>swap_range</name>
        <param>
          <type>int</type>
          <declname>l0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="111" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="111" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1af19fa13dbdd8d87c5a46b9744dd53900" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1Array" kindref="compound">Array</ref>&lt; T &gt;</type>
        <definition>Array&lt;T&gt; titan23::Array&lt; T &gt;::copy</definition>
        <argsstring>() const</argsstring>
        <name>copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="128" column="11" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a3cff4f7a26ae176d54cb3e7b2d93a256" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::Array&lt; T &gt;::contain</definition>
        <argsstring>(T &amp;key) const</argsstring>
        <name>contain</name>
        <param>
          <type>T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="133" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1ac1fa5ef88b499c332031339a4c3b0992" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; titan23::Array&lt; T &gt;::operator[]</definition>
        <argsstring>(const int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="140" column="7" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1a3677a39f92f23ea116a3dba22c78993c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::Array&lt; T &gt;::operator[]</definition>
        <argsstring>(const int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="145" column="7" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1afd358c83eb4d52e9a6d6f27703b966b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Array&lt; T &gt;::len</definition>
        <argsstring>() const</argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="150" column="9" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1afbd05d8aea8383dff358ab3cefc66ddf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::Array&lt; T &gt;::tovector</definition>
        <argsstring>() const</argsstring>
        <name>tovector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="154" column="12" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1ae36998fead02b26eb3e0cac9c78e7d94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="159" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1Array_1aa892b2eb481fb09daf44d86cece50f17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::Array&lt; T &gt;::pprint</definition>
        <argsstring>(string sep=&quot; &quot;, string end=&quot;\n&quot;)</argsstring>
        <name>pprint</name>
        <param>
          <type>string</type>
          <declname>sep</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>end</declname>
          <defval>&quot;\n&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/array.cpp" line="170" column="10" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="170" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib_expanded/data_structures/array.cpp" line="11" column="3" bodyfile="titan_cpplib_expanded/data_structures/array.cpp" bodystart="11" bodyend="179"/>
    <listofallmembers>
      <member refid="classtitan23_1_1Array_1ac6489de83a427bc5725340a4a0f4d6d8" prot="private" virt="non-virtual"><scope>titan23::Array</scope><name>a</name></member>
      <member refid="classtitan23_1_1Array_1a2e02c73249832591fc87745f065d0564" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>Array</name></member>
      <member refid="classtitan23_1_1Array_1a775f76422723cab9abe27366a35c1213" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>Array</name></member>
      <member refid="classtitan23_1_1Array_1a3ec011088b4aab902ea95bf47435b965" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>Array</name></member>
      <member refid="classtitan23_1_1Array_1a76a8eeee66e80309ef8ff918ca7218bc" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>Array</name></member>
      <member refid="classtitan23_1_1Array_1abb14b19eee00fcccbe15c92f283aff8d" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>clear</name></member>
      <member refid="classtitan23_1_1Array_1a3cff4f7a26ae176d54cb3e7b2d93a256" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>contain</name></member>
      <member refid="classtitan23_1_1Array_1af19fa13dbdd8d87c5a46b9744dd53900" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>copy</name></member>
      <member refid="classtitan23_1_1Array_1a3a066cb6a215790d033284d486a34a03" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>count</name></member>
      <member refid="classtitan23_1_1Array_1a0e18247476d92c295214e8bf543b33e7" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>emplace_back</name></member>
      <member refid="classtitan23_1_1Array_1a927575c163eb2d6c0f504c91777d543d" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>empty</name></member>
      <member refid="classtitan23_1_1Array_1a61987d4c8d0888850af4496747d77350" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>index</name></member>
      <member refid="classtitan23_1_1Array_1ac56780df6a1b95a8e192ed8867d96a38" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>insert</name></member>
      <member refid="classtitan23_1_1Array_1afd358c83eb4d52e9a6d6f27703b966b7" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>len</name></member>
      <member refid="classtitan23_1_1Array_1ac1fa5ef88b499c332031339a4c3b0992" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>operator[]</name></member>
      <member refid="classtitan23_1_1Array_1a3677a39f92f23ea116a3dba22c78993c" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>operator[]</name></member>
      <member refid="classtitan23_1_1Array_1ae1c1dc0b6156bdfc5ad3c069b9481db0" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>pop</name></member>
      <member refid="classtitan23_1_1Array_1aa892b2eb481fb09daf44d86cece50f17" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>pprint</name></member>
      <member refid="classtitan23_1_1Array_1ae36998fead02b26eb3e0cac9c78e7d94" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>print</name></member>
      <member refid="classtitan23_1_1Array_1a8b7ae2faed800e20e90311fc674965ca" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>remove</name></member>
      <member refid="classtitan23_1_1Array_1a7d52afdf22debf3a80bf33faee7a500b" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>reserve</name></member>
      <member refid="classtitan23_1_1Array_1afff6d51ec5b8b52ce0cdb7369a0bbc4a" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>resize</name></member>
      <member refid="classtitan23_1_1Array_1a35a968b97910b7b4aa0816021a537c71" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>reverse</name></member>
      <member refid="classtitan23_1_1Array_1a497f2613b16d9703512197182a88f148" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>reverse</name></member>
      <member refid="classtitan23_1_1Array_1a768912601c13a7c762fc4f3f7470f37f" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>sort</name></member>
      <member refid="classtitan23_1_1Array_1aa3476b685402c6dea5899f544bbfcbd4" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>sum</name></member>
      <member refid="classtitan23_1_1Array_1aa99af80e8dc13f0f426cabd87bbe350c" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>swap</name></member>
      <member refid="classtitan23_1_1Array_1ac5e6f6576c98d47c09d9e0c37ef2059a" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>swap_range</name></member>
      <member refid="classtitan23_1_1Array_1afbd05d8aea8383dff358ab3cefc66ddf" prot="public" virt="non-virtual"><scope>titan23::Array</scope><name>tovector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

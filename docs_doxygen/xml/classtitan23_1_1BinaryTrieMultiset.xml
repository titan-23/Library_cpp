<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtitan23_1_1BinaryTrieMultiset" kind="class" language="C++" prot="public">
    <compoundname>titan23::BinaryTrieMultiset</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1ad747852e671e0e5fef24665537663caf" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned int &gt;</type>
        <definition>vector&lt;unsigned int&gt; titan23::BinaryTrieMultiset&lt; T &gt;::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="11" column="12" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1aab6c973e5263d4ec6aecc85320d49346" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned int &gt;</type>
        <definition>vector&lt;unsigned int&gt; titan23::BinaryTrieMultiset&lt; T &gt;::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="11" column="17" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1a8d838820a01cbbfe822486614e2d4694" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned int &gt;</type>
        <definition>vector&lt;unsigned int&gt; titan23::BinaryTrieMultiset&lt; T &gt;::par</definition>
        <argsstring></argsstring>
        <name>par</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="11" column="23" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1a2f52ff28da47445e04043d28dda5cefe" prot="private" static="no" mutable="no">
        <type>vector&lt; unsigned int &gt;</type>
        <definition>vector&lt;unsigned int&gt; titan23::BinaryTrieMultiset&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="11" column="27" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1ab542f8133704ab7a1df9a515fa29cb19" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::BinaryTrieMultiset&lt; T &gt;::_end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="12" column="18" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1afb7f8e16743d980f3089231ca9af6fcf" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::BinaryTrieMultiset&lt; T &gt;::_root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="12" column="23" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1a2b4698a4a52237464d2b092ae733b5ae" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::BinaryTrieMultiset&lt; T &gt;::_bit</definition>
        <argsstring></argsstring>
        <name>_bit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="12" column="29" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1af033d53f8ec8848e203865e39eaae8a1" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::_lim</definition>
        <argsstring></argsstring>
        <name>_lim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="13" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1BinaryTrieMultiset_1acb3081132cc78c4614fdc562abcbf51b" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::_xor_val</definition>
        <argsstring></argsstring>
        <name>_xor_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="13" column="12" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1acf3e0f513b6fe3bb103c565fb29e3732" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int titan23::BinaryTrieMultiset&lt; T &gt;::_make_node</definition>
        <argsstring>()</argsstring>
        <name>_make_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="15" column="18" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="15" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a58eda6197e0352a10d2d570a3dee04b2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::BinaryTrieMultiset&lt; T &gt;::_find</definition>
        <argsstring>(T key) const</argsstring>
        <name>_find</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="25" column="9" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="25" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a060979c74873fa61bd98e58d05eac1ff" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::_remove</definition>
        <argsstring>(unsigned int node)</argsstring>
        <name>_remove</name>
        <param>
          <type>unsigned int</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="40" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="40" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1aa0cd87133826a547d5b89b9a87f1879f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::BinaryTrieMultiset&lt; T &gt;::BinaryTrieMultiset</definition>
        <argsstring>(const unsigned int bit)</argsstring>
        <name>BinaryTrieMultiset</name>
        <param>
          <type>const unsigned int</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="61" column="5" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a38246a77983d170fe4f53657c26cca7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::reserve</definition>
        <argsstring>(const int n)</argsstring>
        <name>reserve</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="73" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ade5ea3abfb5378255eac0312fac0df61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::add</definition>
        <argsstring>(T key, int cnt=1)</argsstring>
        <name>add</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="80" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="80" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ac9e0914ca336c347e0c687e994c01879" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::BinaryTrieMultiset&lt; T &gt;::contains</definition>
        <argsstring>(T key) const</argsstring>
        <name>contains</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="105" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ab58658a7d5230d40feaaa56d3876d05a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::BinaryTrieMultiset&lt; T &gt;::discard</definition>
        <argsstring>(T key, int cnt=1)</argsstring>
        <name>discard</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="109" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="109" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a88e5b125955495256c656d2c06441929" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::BinaryTrieMultiset&lt; T &gt;::discard_all</definition>
        <argsstring>(T key)</argsstring>
        <name>discard_all</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="125" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ac25659f97ba4b93efd498d4e008ddb86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::remove</definition>
        <argsstring>(T key, int cnt=1)</argsstring>
        <name>remove</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="129" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="129" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ac7ab01d38b98dd0233be46098e69a124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::BinaryTrieMultiset&lt; T &gt;::count</definition>
        <argsstring>(T key) const</argsstring>
        <name>count</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="153" column="9" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a0f726715d5c5b02ac639b7df20fd5cb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::pop</definition>
        <argsstring>(int k=-1)</argsstring>
        <name>pop</name>
        <param>
          <type>int</type>
          <declname>k</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="158" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="158" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1af6bd2b1c0afff36ac81aef4ef37a21a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::pop_min</definition>
        <argsstring>()</argsstring>
        <name>pop_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="196" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1acf41cf273d04c3dd96240376d85404e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::pop_max</definition>
        <argsstring>()</argsstring>
        <name>pop_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="200" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1af505efc8172cf68fef53bd997efd62fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::all_xor</definition>
        <argsstring>(T x)</argsstring>
        <name>all_xor</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="204" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a9ce1854896155a420efbc6ee9b45569a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::get_min</definition>
        <argsstring>() const</argsstring>
        <name>get_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="208" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="208" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a80bda8a13bcaa8214e17475f010e1c74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::get_max</definition>
        <argsstring>() const</argsstring>
        <name>get_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="234" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="234" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1aab1a324d644bd98acf0594159068552f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::BinaryTrieMultiset&lt; T &gt;::index</definition>
        <argsstring>(T key) const</argsstring>
        <name>index</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="260" column="9" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="260" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1abdf4d7b9c779d5caf1a724fa7fa7b53d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::BinaryTrieMultiset&lt; T &gt;::index_right</definition>
        <argsstring>(T key) const</argsstring>
        <name>index_right</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="277" column="9" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="277" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a5d831da6acf24478806e0798cfbc9522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::get</definition>
        <argsstring>(int k) const</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="294" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="294" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a6d8f073903291a75a4d38e8437cb79fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::gt</definition>
        <argsstring>(T key) const</argsstring>
        <name>gt</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="324" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a14b392914c68f55e59eef5b624942e4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::lt</definition>
        <argsstring>(T key) const</argsstring>
        <name>lt</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="329" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a462ae977c7a59a766d7c5db0747e0557" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::ge</definition>
        <argsstring>(T key) const</argsstring>
        <name>ge</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="334" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="334" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ae586199cb7a511f0aac0d16b74a0a270" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::BinaryTrieMultiset&lt; T &gt;::le</definition>
        <argsstring>(T key) const</argsstring>
        <name>le</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="340" column="7" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a02f029d3664fa62f04974eab92979429" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::BinaryTrieMultiset&lt; T &gt;::tovector</definition>
        <argsstring>() const</argsstring>
        <name>tovector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="345" column="12" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="345" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1a4e50705b073e442a15e9d6a2ce233cec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::BinaryTrieMultiset&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="356" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="356" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ac4ac0d5a8395f36494b8b3ad3e36ef4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="360" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1ab7b5d6adaa5c1b8e8c2fcba56b4316b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::BinaryTrieMultiset&lt; T &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="364" column="10" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="364" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1BinaryTrieMultiset_1acb1f3be1511e10998c07e42114a9a7fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::BinaryTrieMultiset&lt; T &gt;::len</definition>
        <argsstring>() const</argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="376" column="9" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="376" bodyend="378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib/data_structures/binary_trie_multiset.cpp" line="9" column="3" bodyfile="titan_cpplib/data_structures/binary_trie_multiset.cpp" bodystart="9" bodyend="379"/>
    <listofallmembers>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a2b4698a4a52237464d2b092ae733b5ae" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_bit</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ab542f8133704ab7a1df9a515fa29cb19" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_end</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a58eda6197e0352a10d2d570a3dee04b2" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_find</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1af033d53f8ec8848e203865e39eaae8a1" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_lim</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1acf3e0f513b6fe3bb103c565fb29e3732" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_make_node</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a060979c74873fa61bd98e58d05eac1ff" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_remove</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1afb7f8e16743d980f3089231ca9af6fcf" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_root</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1acb3081132cc78c4614fdc562abcbf51b" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>_xor_val</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ade5ea3abfb5378255eac0312fac0df61" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>add</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1af505efc8172cf68fef53bd997efd62fa" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>all_xor</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1aa0cd87133826a547d5b89b9a87f1879f" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>BinaryTrieMultiset</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ac4ac0d5a8395f36494b8b3ad3e36ef4c" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>clear</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ac9e0914ca336c347e0c687e994c01879" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>contains</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ac7ab01d38b98dd0233be46098e69a124" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>count</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ab58658a7d5230d40feaaa56d3876d05a" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>discard</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a88e5b125955495256c656d2c06441929" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>discard_all</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a4e50705b073e442a15e9d6a2ce233cec" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>empty</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a462ae977c7a59a766d7c5db0747e0557" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>ge</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a5d831da6acf24478806e0798cfbc9522" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>get</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a80bda8a13bcaa8214e17475f010e1c74" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>get_max</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a9ce1854896155a420efbc6ee9b45569a" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>get_min</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a6d8f073903291a75a4d38e8437cb79fd" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>gt</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1aab1a324d644bd98acf0594159068552f" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>index</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1abdf4d7b9c779d5caf1a724fa7fa7b53d" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>index_right</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ae586199cb7a511f0aac0d16b74a0a270" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>le</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ad747852e671e0e5fef24665537663caf" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>left</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1acb1f3be1511e10998c07e42114a9a7fd" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>len</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a14b392914c68f55e59eef5b624942e4b" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>lt</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a8d838820a01cbbfe822486614e2d4694" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>par</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a0f726715d5c5b02ac639b7df20fd5cb3" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>pop</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1acf41cf273d04c3dd96240376d85404e0" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>pop_max</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1af6bd2b1c0afff36ac81aef4ef37a21a4" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>pop_min</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ab7b5d6adaa5c1b8e8c2fcba56b4316b7" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>print</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1ac25659f97ba4b93efd498d4e008ddb86" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>remove</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a38246a77983d170fe4f53657c26cca7d" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>reserve</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1aab6c973e5263d4ec6aecc85320d49346" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>right</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a2f52ff28da47445e04043d28dda5cefe" prot="private" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>size</name></member>
      <member refid="classtitan23_1_1BinaryTrieMultiset_1a02f029d3664fa62f04974eab92979429" prot="public" virt="non-virtual"><scope>titan23::BinaryTrieMultiset</scope><name>tovector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

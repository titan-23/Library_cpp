<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtitan23_1_1EulerTourTree" kind="class" language="C++" prot="public">
    <compoundname>titan23::EulerTourTree</compoundname>
    <innerclass refid="structtitan23_1_1EulerTourTree_1_1Node" prot="private">titan23::EulerTourTree::Node</innerclass>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>T(*)(T, T)</type>
        <declname>op</declname>
        <defname>op</defname>
      </param>
      <param>
        <type>T(*)()</type>
        <declname>e</declname>
        <defname>e</defname>
      </param>
      <param>
        <type>class F</type>
      </param>
      <param>
        <type>T(*)(F, T)</type>
        <declname>mapping</declname>
        <defname>mapping</defname>
      </param>
      <param>
        <type>F(*)(F, F)</type>
        <declname>composition</declname>
        <defname>composition</defname>
      </param>
      <param>
        <type>F(*)()</type>
        <declname>id</declname>
        <defname>id</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtitan23_1_1EulerTourTree_1a48a46c9bfbde062028aa185ad961f656" prot="private" static="no">
        <type>Node *</type>
        <definition>using titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::NodePtr =  Node*</definition>
        <argsstring></argsstring>
        <name>NodePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="31" column="9" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtitan23_1_1EulerTourTree_1ab21b9f6aea3a6316acf5105af4b04fc4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="32" column="13" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1EulerTourTree_1a84e149ccc7355dbbbb211f4e8238b18f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::group_numbers</definition>
        <argsstring></argsstring>
        <name>group_numbers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="32" column="15" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1EulerTourTree_1a674ed1475e5de35d32aeff19cdf15053" prot="private" static="no" mutable="no">
        <type>vector&lt; NodePtr &gt;</type>
        <definition>vector&lt;NodePtr&gt; titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::ptr_vertex</definition>
        <argsstring></argsstring>
        <name>ptr_vertex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="33" column="16" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1EulerTourTree_1aa800a9a7e48d9c780a1c9bef1803a579" prot="private" static="no" mutable="no">
        <type>unordered_map&lt; long long, NodePtr &gt;</type>
        <definition>unordered_map&lt;long long, NodePtr&gt; titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::ptr_edge</definition>
        <argsstring></argsstring>
        <name>ptr_edge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="34" column="23" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a86b296ed7564ddb59bb8f14390f10547" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_init_build</definition>
        <argsstring>(vector&lt; T &gt; &amp;a)</argsstring>
        <name>_init_build</name>
        <param>
          <type>vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="52" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a5373b698f860d298a8a5a9556c6872a8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_popleft</definition>
        <argsstring>(NodePtr v)</argsstring>
        <name>_popleft</name>
        <param>
          <type>NodePtr</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="59" column="17" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1abd6e4733d9af80b4752de4f7e97193a2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_pop</definition>
        <argsstring>(NodePtr v)</argsstring>
        <name>_pop</name>
        <param>
          <type>NodePtr</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="65" column="17" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a56c49a73c4d8ab781402f790876e6a6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; NodePtr, NodePtr &gt;</type>
        <definition>pair&lt;NodePtr, NodePtr&gt; titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_split_left</definition>
        <argsstring>(NodePtr v)</argsstring>
        <name>_split_left</name>
        <param>
          <type>NodePtr</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="71" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1adbf4f157202ce0cdfd45334705d4d297" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; NodePtr, NodePtr &gt;</type>
        <definition>pair&lt;NodePtr, NodePtr&gt; titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_split_right</definition>
        <argsstring>(NodePtr v)</argsstring>
        <name>_split_right</name>
        <param>
          <type>NodePtr</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="80" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a8696e29b3c8c5f51aa1b06d43f499e73" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_merge</definition>
        <argsstring>(NodePtr u, NodePtr v)</argsstring>
        <name>_merge</name>
        <param>
          <type>NodePtr</type>
          <declname>u</declname>
        </param>
        <param>
          <type>NodePtr</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="89" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1abb9dda963479da7333dc6cb18b64e1b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_splay</definition>
        <argsstring>(NodePtr node)</argsstring>
        <name>_splay</name>
        <param>
          <type>NodePtr</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="98" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="98" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1aab1180163623e65519d48e0328f2dd58" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_left_splay</definition>
        <argsstring>(NodePtr node)</argsstring>
        <name>_left_splay</name>
        <param>
          <type>NodePtr</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="181" column="17" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1ab5a33006767c660e4a9fbc054910f83b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_right_splay</definition>
        <argsstring>(NodePtr node)</argsstring>
        <name>_right_splay</name>
        <param>
          <type>NodePtr</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="188" column="17" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="188" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a33bd0f877b836304c86bd2bffa3485e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_propagate</definition>
        <argsstring>(NodePtr node)</argsstring>
        <name>_propagate</name>
        <param>
          <type>NodePtr</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="195" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="195" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1acefae03d017cea529bd18ed69928ae5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::_update</definition>
        <argsstring>(NodePtr node)</argsstring>
        <name>_update</name>
        <param>
          <type>NodePtr</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="210" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="210" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1adb28938ad49dc0727f2432c514f86b5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::EulerTourTree</definition>
        <argsstring>(int n)</argsstring>
        <name>EulerTourTree</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="219" column="9" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a05b4a3274aab526c45b3d525144bc193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::EulerTourTree</definition>
        <argsstring>(vector&lt; T &gt; a)</argsstring>
        <name>EulerTourTree</name>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="224" column="9" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a2d2083b021646fe1e64dbbd549aaa78e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::build</definition>
        <argsstring>(vector&lt; vector&lt; int &gt;&gt; &amp;G)</argsstring>
        <name>build</name>
        <param>
          <type>vector&lt; vector&lt; int &gt;&gt; &amp;</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>隣接リストから構築する / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="229" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="229" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a1e8d27f949063f3bf4c79d9ebfed09e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::link</definition>
        <argsstring>(const int u, const int v)</argsstring>
        <name>link</name>
        <param>
          <type>const int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>辺 <computeroutput>{u, v}</computeroutput> を追加する / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="277" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="277" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a5930cb3c4b0bb48b3eaf5df93c78987e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::cut</definition>
        <argsstring>(const int u, const int v)</argsstring>
        <name>cut</name>
        <param>
          <type>const int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>辺 <computeroutput>{u, v}</computeroutput> を削除する / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="293" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="293" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1ac69f772f84c11ad21f9521fa8065dae3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::merge</definition>
        <argsstring>(const int u, const int v)</argsstring>
        <name>merge</name>
        <param>
          <type>const int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>辺 <computeroutput>{u, v}</computeroutput> がなければ追加する / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="310" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a377499626a4ea3108535c7dc087a50a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::split</definition>
        <argsstring>(const int u, const int v)</argsstring>
        <name>split</name>
        <param>
          <type>const int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>辺 <computeroutput>{u, v}</computeroutput> があれば削除する / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="317" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="317" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1afdfc36d3ea4d6e0481da70d7abf380b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::leader</definition>
        <argsstring>(const int v)</argsstring>
        <name>leader</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>代表元？ / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="326" column="17" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a3aef6b791a7186021f7b1a1e99b97627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::reroot</definition>
        <argsstring>(const int v)</argsstring>
        <name>reroot</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>根を <computeroutput>v</computeroutput> にする / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="331" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="331" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a21be4ce279a5a222764feac9c9abdef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::same</definition>
        <argsstring>(const int u, const int v)</argsstring>
        <name>same</name>
        <param>
          <type>const int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>連結判定 / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="339" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1ae0c5c2644f0cef035c6c293c7f91e201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::subtree_apply</definition>
        <argsstring>(const int v, const int p, const F f)</argsstring>
        <name>subtree_apply</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para><computeroutput>v</computeroutput> を根とする部分木に <computeroutput>f</computeroutput> を作用、ただし <computeroutput>v</computeroutput> の親は <computeroutput>p(or -1)</computeroutput> / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="348" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="348" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a581bca5bb414ffe3d05139cff53e4b97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::subtree_sum</definition>
        <argsstring>(const int v, const int p)</argsstring>
        <name>subtree_sum</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para><computeroutput>v</computeroutput> を根とする部分木の総和、ただし <computeroutput>v</computeroutput> の親は <computeroutput>p(or -1)</computeroutput> / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="372" column="11" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="372" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1ae910fb0f28e395e4d111cba92ee39102" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::group_count</definition>
        <argsstring>() const</argsstring>
        <name>group_count</name>
        <briefdescription>
<para>連結成分の個数を返す / <computeroutput>(1)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="391" column="13" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1a52cb8f17a4793aa0c6042a184ac66c1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::get_vertex</definition>
        <argsstring>(const int v)</argsstring>
        <name>get_vertex</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para><computeroutput>v</computeroutput> の値を取得 / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="396" column="11" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="396" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1EulerTourTree_1ab29dfec9d0bc8c179f1a5725351991dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::EulerTourTree&lt; T, op, e, F, mapping, composition, id &gt;::set_vertex</definition>
        <argsstring>(const int v, const T val)</argsstring>
        <name>set_vertex</name>
        <param>
          <type>const int</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para><computeroutput>v</computeroutput> の値を <computeroutput>val</computeroutput> に変更 / <computeroutput>O(logn)</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="403" column="14" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="403" bodyend="408"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtitan23_1_1EulerTourTree" kindref="compound">EulerTourTree</ref>(動的木) </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(*op)(T</parametername>
<parametername>T)</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(*mapping)(F</parametername>
<parametername>T)</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(*composition)(F</parametername>
<parametername>F)</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(*e)()</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(*id)()</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" line="28" column="5" bodyfile="titan_cpplib_expanded/data_structures/euler_tour_tree.cpp" bodystart="28" bodyend="409"/>
    <listofallmembers>
      <member refid="classtitan23_1_1EulerTourTree_1a86b296ed7564ddb59bb8f14390f10547" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_init_build</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1aab1180163623e65519d48e0328f2dd58" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_left_splay</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a8696e29b3c8c5f51aa1b06d43f499e73" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_merge</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1abd6e4733d9af80b4752de4f7e97193a2" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_pop</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a5373b698f860d298a8a5a9556c6872a8" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_popleft</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a33bd0f877b836304c86bd2bffa3485e0" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_propagate</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ab5a33006767c660e4a9fbc054910f83b" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_right_splay</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1abb9dda963479da7333dc6cb18b64e1b7" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_splay</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a56c49a73c4d8ab781402f790876e6a6c" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_split_left</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1adbf4f157202ce0cdfd45334705d4d297" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_split_right</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1acefae03d017cea529bd18ed69928ae5c" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>_update</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a2d2083b021646fe1e64dbbd549aaa78e" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>build</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a5930cb3c4b0bb48b3eaf5df93c78987e" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>cut</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1adb28938ad49dc0727f2432c514f86b5a" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>EulerTourTree</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a05b4a3274aab526c45b3d525144bc193" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>EulerTourTree</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a52cb8f17a4793aa0c6042a184ac66c1e" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>get_vertex</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ae910fb0f28e395e4d111cba92ee39102" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>group_count</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a84e149ccc7355dbbbb211f4e8238b18f" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>group_numbers</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1afdfc36d3ea4d6e0481da70d7abf380b1" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>leader</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a1e8d27f949063f3bf4c79d9ebfed09e1" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>link</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ac69f772f84c11ad21f9521fa8065dae3" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>merge</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ab21b9f6aea3a6316acf5105af4b04fc4" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>n</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a48a46c9bfbde062028aa185ad961f656" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>NodePtr</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1aa800a9a7e48d9c780a1c9bef1803a579" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>ptr_edge</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a674ed1475e5de35d32aeff19cdf15053" prot="private" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>ptr_vertex</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a3aef6b791a7186021f7b1a1e99b97627" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>reroot</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a21be4ce279a5a222764feac9c9abdef3" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>same</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ab29dfec9d0bc8c179f1a5725351991dc" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>set_vertex</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a377499626a4ea3108535c7dc087a50a2" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>split</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1ae0c5c2644f0cef035c6c293c7f91e201" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>subtree_apply</name></member>
      <member refid="classtitan23_1_1EulerTourTree_1a581bca5bb414ffe3d05139cff53e4b97" prot="public" virt="non-virtual"><scope>titan23::EulerTourTree</scope><name>subtree_sum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtitan23_1_1PersistentLazyWBTree" kind="class" language="C++" prot="public">
    <compoundname>titan23::PersistentLazyWBTree</compoundname>
    <innerclass refid="classtitan23_1_1PersistentLazyWBTree_1_1Node" prot="private">titan23::PersistentLazyWBTree::Node</innerclass>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class F</type>
      </param>
      <param>
        <type>T(*)(T, T)</type>
        <declname>op</declname>
        <defname>op</defname>
      </param>
      <param>
        <type>T(*)(F, T)</type>
        <declname>mapping</declname>
        <defname>mapping</defname>
      </param>
      <param>
        <type>F(*)(F, F)</type>
        <declname>composition</declname>
        <defname>composition</defname>
      </param>
      <param>
        <type>T(*)()</type>
        <declname>e</declname>
        <defname>e</defname>
      </param>
      <param>
        <type>F(*)()</type>
        <declname>id</declname>
        <defname>id</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtitan23_1_1PersistentLazyWBTree_1a36fb333ad4b05e167a83c8712be3fa46" prot="private" static="no">
        <type>shared_ptr&lt; Node &gt;</type>
        <definition>using titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::NodePtr =  shared_ptr&lt;Node&gt;</definition>
        <argsstring></argsstring>
        <name>NodePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="21" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtitan23_1_1PersistentLazyWBTree_1abb4f40a163fd7a95762c4b8ac50e12f1" prot="private" static="no">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">PersistentLazyWBTree</ref>&lt; T, F, op, mapping, composition, e, id &gt;</type>
        <definition>using titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::MyPersistentLazyWBTree =  PersistentLazyWBTree&lt;T, F, op, mapping, composition, e, id&gt;</definition>
        <argsstring></argsstring>
        <name>MyPersistentLazyWBTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="22" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1ae472c4c3f28a8e2f9c8dae2a7b2541b3" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::ALPHA</definition>
        <argsstring></argsstring>
        <name>ALPHA</name>
        <initializer>= 1 - sqrt(2) / 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="23" column="35" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1acccb37d64651cb369a3a41a5c7b7628b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr const double</type>
        <definition>constexpr const double titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::BETA</definition>
        <argsstring></argsstring>
        <name>BETA</name>
        <initializer>= (1 - 2 * ALPHA) / (1 - ALPHA)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="24" column="35" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1a01c275bda78d51c59ece78e61a0334bc" prot="public" static="no" mutable="no">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="262" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ab00c31de868855781312559dfc8b63c3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_build</definition>
        <argsstring>(vector&lt; T &gt; const &amp;a)</argsstring>
        <name>_build</name>
        <param>
          <type>vector&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="101" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ab54d806ec058c0fc3c15a7e6f04932b0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_rotate_right</definition>
        <argsstring>(NodePtr &amp;node)</argsstring>
        <name>_rotate_right</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="113" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a3bd2b7afb3f65f501b48d1a37b9f1701" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_rotate_left</definition>
        <argsstring>(NodePtr &amp;node)</argsstring>
        <name>_rotate_left</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="122" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a5a56e2dbb13887b19e5b96cabf9b112d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_balance_left</definition>
        <argsstring>(NodePtr &amp;node)</argsstring>
        <name>_balance_left</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="131" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="131" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a4ceafb83df06a295f07dc35dd7dbff67" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_balance_right</definition>
        <argsstring>(NodePtr &amp;node)</argsstring>
        <name>_balance_right</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="143" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a2143a0c5a3fc89010a57aca63595c4a3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_merge_with_root</definition>
        <argsstring>(NodePtr l, NodePtr root, NodePtr r)</argsstring>
        <name>_merge_with_root</name>
        <param>
          <type>NodePtr</type>
          <declname>l</declname>
        </param>
        <param>
          <type>NodePtr</type>
          <declname>root</declname>
        </param>
        <param>
          <type>NodePtr</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="155" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="155" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1af085f1b6fe788e541b623320ae4f5061" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; NodePtr, NodePtr &gt;</type>
        <definition>pair&lt;NodePtr, NodePtr&gt; titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_pop_right</definition>
        <argsstring>(NodePtr &amp;node)</argsstring>
        <name>_pop_right</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="186" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="186" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a72701ba7ef43e89cfe5d363c650d2d8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_merge_node</definition>
        <argsstring>(NodePtr l, NodePtr r)</argsstring>
        <name>_merge_node</name>
        <param>
          <type>NodePtr</type>
          <declname>l</declname>
        </param>
        <param>
          <type>NodePtr</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="229" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="229" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a346f584fec6b5165dfcab75baa8341c8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; NodePtr, NodePtr &gt;</type>
        <definition>pair&lt;NodePtr, NodePtr&gt; titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_split_node</definition>
        <argsstring>(NodePtr &amp;node, int k)</argsstring>
        <name>_split_node</name>
        <param>
          <type>NodePtr &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="239" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="239" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a1360e557bd52cd2d0786a191d68978b0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::_new</definition>
        <argsstring>(NodePtr root)</argsstring>
        <name>_new</name>
        <param>
          <type>NodePtr</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="254" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a7a3866a5b332fc2ac3a8278ca043b1a4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::PersistentLazyWBTree</definition>
        <argsstring>(NodePtr root)</argsstring>
        <name>PersistentLazyWBTree</name>
        <param>
          <type>NodePtr</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="259" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="259" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ad982791cc29e626b4e82d82748512f45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::PersistentLazyWBTree</definition>
        <argsstring>()</argsstring>
        <name>PersistentLazyWBTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="264" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a76b3e85bbf3372c57737f931c4f3b459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::PersistentLazyWBTree</definition>
        <argsstring>(vector&lt; T &gt; &amp;a)</argsstring>
        <name>PersistentLazyWBTree</name>
        <param>
          <type>vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="266" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a0174316c17f25ac76fca0fded041ca14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::merge</definition>
        <argsstring>(MyPersistentLazyWBTree other)</argsstring>
        <name>merge</name>
        <param>
          <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="268" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1aa2bb014da43b499bc8094171417149af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; <ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref>, <ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref> &gt;</type>
        <definition>pair&lt;MyPersistentLazyWBTree, MyPersistentLazyWBTree&gt; titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::split</definition>
        <argsstring>(int k)</argsstring>
        <name>split</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="273" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ab0f18e1998fc973c2f95549f31713c42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::apply</definition>
        <argsstring>(int l, int r, F f)</argsstring>
        <name>apply</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="278" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="278" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a1d79b710475e3f191ef401861bfcee40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::prod</definition>
        <argsstring>(int l, int r)</argsstring>
        <name>prod</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="300" column="7" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="300" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1aaca117dbfcb20ee168de270c47d9bfa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::insert</definition>
        <argsstring>(int k, T key)</argsstring>
        <name>insert</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="316" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="316" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ace6933efab2470f76baf9694efef93f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; <ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref>, T &gt;</type>
        <definition>pair&lt;MyPersistentLazyWBTree, T&gt; titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::pop</definition>
        <argsstring>(int k)</argsstring>
        <name>pop</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="323" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="323" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1af4bd1d9f5453e8af8139ff7675560bde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::reverse</definition>
        <argsstring>(int l, int r)</argsstring>
        <name>reverse</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="331" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="331" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1aeaca8bcbd48fceaae127678b1f810b4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::tovector</definition>
        <argsstring>()</argsstring>
        <name>tovector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="341" column="12" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="341" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a42c33483f94db5a706a1292c3720f4ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::copy</definition>
        <argsstring>() const</argsstring>
        <name>copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="361" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a576bfb9868558ed7090eca22251a4bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtitan23_1_1PersistentLazyWBTree" kindref="compound">MyPersistentLazyWBTree</ref></type>
        <definition>MyPersistentLazyWBTree titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::set</definition>
        <argsstring>(int k, T v)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="365" column="28" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="365" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1ac22921313df0a1192399f5aed688946d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::get</definition>
        <argsstring>(int k)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="403" column="7" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="403" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a93f3c8b589602001c56c2ebfd255e2c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="422" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="422" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1a2eaeb6a004bae14ad1061f270342bd6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::len</definition>
        <argsstring>() const</argsstring>
        <name>len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="432" column="9" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="432" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1add7b0ef8213f623d3f5bb139e3a86534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::debug</definition>
        <argsstring>()</argsstring>
        <name>debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="436" column="10" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="436" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="17" column="3" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="17" bodyend="459"/>
    <listofallmembers>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a5a56e2dbb13887b19e5b96cabf9b112d" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_balance_left</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a4ceafb83df06a295f07dc35dd7dbff67" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_balance_right</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ab00c31de868855781312559dfc8b63c3" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_build</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a72701ba7ef43e89cfe5d363c650d2d8d" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_merge_node</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a2143a0c5a3fc89010a57aca63595c4a3" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_merge_with_root</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a1360e557bd52cd2d0786a191d68978b0" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_new</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1af085f1b6fe788e541b623320ae4f5061" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_pop_right</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a3bd2b7afb3f65f501b48d1a37b9f1701" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_rotate_left</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ab54d806ec058c0fc3c15a7e6f04932b0" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_rotate_right</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a346f584fec6b5165dfcab75baa8341c8" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>_split_node</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ae472c4c3f28a8e2f9c8dae2a7b2541b3" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>ALPHA</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ab0f18e1998fc973c2f95549f31713c42" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>apply</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1acccb37d64651cb369a3a41a5c7b7628b" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>BETA</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a42c33483f94db5a706a1292c3720f4ce" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>copy</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1add7b0ef8213f623d3f5bb139e3a86534" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>debug</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ac22921313df0a1192399f5aed688946d" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>get</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1aaca117dbfcb20ee168de270c47d9bfa3" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>insert</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a2eaeb6a004bae14ad1061f270342bd6f" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>len</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a0174316c17f25ac76fca0fded041ca14" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>merge</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1abb4f40a163fd7a95762c4b8ac50e12f1" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>MyPersistentLazyWBTree</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a36fb333ad4b05e167a83c8712be3fa46" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>NodePtr</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a7a3866a5b332fc2ac3a8278ca043b1a4" prot="private" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>PersistentLazyWBTree</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ad982791cc29e626b4e82d82748512f45" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>PersistentLazyWBTree</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a76b3e85bbf3372c57737f931c4f3b459" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>PersistentLazyWBTree</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1ace6933efab2470f76baf9694efef93f0" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>pop</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a93f3c8b589602001c56c2ebfd255e2c1" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>print</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a1d79b710475e3f191ef401861bfcee40" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>prod</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1af4bd1d9f5453e8af8139ff7675560bde" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>reverse</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a01c275bda78d51c59ece78e61a0334bc" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>root</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1a576bfb9868558ed7090eca22251a4bfe" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>set</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1aa2bb014da43b499bc8094171417149af" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>split</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1aeaca8bcbd48fceaae127678b1f810b4c" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree</scope><name>tovector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtitan23_1_1PersistentLazyWBTree_1_1Node" kind="class" language="C++" prot="private">
    <compoundname>titan23::PersistentLazyWBTree::Node</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a913dd98c9b618bc618854518c02f8c1a" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="29" column="9" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a65a8bb87fabe6c19561c0824e80c35ac" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="29" column="13" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4a2e7e3cc55d8bef5003cc08a94c3ae3" prot="public" static="no" mutable="no">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="30" column="15" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a1724f8db4503765bca829ee5210257f1" prot="public" static="no" mutable="no">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="31" column="15" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a1d29a5cd39b3b2a476c1942c0e4cf15f" prot="public" static="no" mutable="no">
        <type>F</type>
        <definition>F titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::lazy</definition>
        <argsstring></argsstring>
        <name>lazy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="32" column="9" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4e2987fea655b4ee5a5bc2542ea46a9e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::rev</definition>
        <argsstring></argsstring>
        <name>rev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="33" column="11" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1af0bd085b0fe3303bc8829c3080f2420e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="33" column="15" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a5d18c77f4adb2d47b4b2c8f0d8c13b82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::Node</definition>
        <argsstring>(T key, F lazy)</argsstring>
        <name>Node</name>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <param>
          <type>F</type>
          <declname>lazy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="35" column="7" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1aa089ee48eb625c72737219fb964ac432" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NodePtr</type>
        <definition>NodePtr titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::copy</definition>
        <argsstring>() const</argsstring>
        <name>copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="37" column="15" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4c43e03ef2709f0a6c061768dedcc7cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::balance</definition>
        <argsstring>() const</argsstring>
        <name>balance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="47" column="14" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a36170eb6288a4b9d51455bab90d89288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::propagate</definition>
        <argsstring>()</argsstring>
        <name>propagate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="51" column="12" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="51" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a7fb1e405004889e522272831eec5df40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="78" column="12" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="78" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classtitan23_1_1PersistentLazyWBTree_1_1Node_1aca57c457ca11af17ca7eeb466e7e8801" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::PersistentLazyWBTree&lt; T, F, op, mapping, composition, e, id &gt;::Node::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="91" column="12" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="91" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" line="26" column="5" bodyfile="titan_cpplib/data_structures/persistent_lazy_wb_tree.cpp" bodystart="26" bodyend="99"/>
    <listofallmembers>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4c43e03ef2709f0a6c061768dedcc7cd" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>balance</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1aa089ee48eb625c72737219fb964ac432" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>copy</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a65a8bb87fabe6c19561c0824e80c35ac" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>data</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a913dd98c9b618bc618854518c02f8c1a" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>key</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a1d29a5cd39b3b2a476c1942c0e4cf15f" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>lazy</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4a2e7e3cc55d8bef5003cc08a94c3ae3" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>left</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a5d18c77f4adb2d47b4b2c8f0d8c13b82" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>Node</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1aca57c457ca11af17ca7eeb466e7e8801" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>print</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a36170eb6288a4b9d51455bab90d89288" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>propagate</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a4e2987fea655b4ee5a5bc2542ea46a9e" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>rev</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a1724f8db4503765bca829ee5210257f1" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>right</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1af0bd085b0fe3303bc8829c3080f2420e" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>size</name></member>
      <member refid="classtitan23_1_1PersistentLazyWBTree_1_1Node_1a7fb1e405004889e522272831eec5df40" prot="public" virt="non-virtual"><scope>titan23::PersistentLazyWBTree::Node</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtitan23_1_1DualSegmentTree" kind="struct" language="C++" prot="public">
    <compoundname>titan23::DualSegmentTree</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class F</type>
      </param>
      <param>
        <type>T(*)(F, T)</type>
        <declname>mapping</declname>
        <defname>mapping</defname>
      </param>
      <param>
        <type>F(*)(F, F)</type>
        <declname>composition</declname>
        <defname>composition</defname>
      </param>
      <param>
        <type>T(*)()</type>
        <declname>e</declname>
        <defname>e</defname>
      </param>
      <param>
        <type>F(*)()</type>
        <declname>id</declname>
        <defname>id</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtitan23_1_1DualSegmentTree_1ae431b726c878c0d46e58ebfd9fdc1b91" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_n</definition>
        <argsstring></argsstring>
        <name>_n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="18" column="9" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DualSegmentTree_1a8b832ab95c4f51b57f46835396394409" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="18" column="12" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DualSegmentTree_1ae2afbeed6aee7440e572fee7577e4638" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_log</definition>
        <argsstring></argsstring>
        <name>_log</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="18" column="18" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DualSegmentTree_1a6cf647971788f554c5c61d4ae42e2210" prot="public" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="19" column="12" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DualSegmentTree_1a8de0cd82a73d81d3bbdbbf9b9ffbbe8c" prot="public" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_lazy</definition>
        <argsstring></argsstring>
        <name>_lazy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="19" column="18" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a476258b46ab853152b1aa4942f2ab6e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::DualSegmentTree</definition>
        <argsstring>()</argsstring>
        <name>DualSegmentTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="21" column="5" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1aac6ec4f66bf4601ab1cf1dc8fd26f7ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::DualSegmentTree</definition>
        <argsstring>(const int n)</argsstring>
        <name>DualSegmentTree</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="23" column="5" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1adc929d4fde4fde6e995a614e01e0c840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::DualSegmentTree</definition>
        <argsstring>(const vector&lt; T &gt; &amp;a)</argsstring>
        <name>DualSegmentTree</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="27" column="5" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a106cf918ccfc3cf7676667a7cd1a9f5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_build</definition>
        <argsstring>(const int n)</argsstring>
        <name>_build</name>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="35" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a1f2b6b13cfcc1f2d64bdc66946437d0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_all_apply</definition>
        <argsstring>(int k, F f)</argsstring>
        <name>_all_apply</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="43" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1af966669c8b61576e1556b40649ef79f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::_propagate</definition>
        <argsstring>(const int k)</argsstring>
        <name>_propagate</name>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="54" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a429140db122c49a663bd35990dd6148a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::apply_point</definition>
        <argsstring>(int k, F f)</argsstring>
        <name>apply_point</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="60" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a98cee976795dbf28de0063a7cfba79b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::apply</definition>
        <argsstring>(int l, int r, const F f)</argsstring>
        <name>apply</name>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="68" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="68" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a34b146aa5f4e956517f53e590b5debde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::all_apply</definition>
        <argsstring>(F f)</argsstring>
        <name>all_apply</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="105" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1afe756dd239c2908fe84946a8bd63b5b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::all_propagate</definition>
        <argsstring>()</argsstring>
        <name>all_propagate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="109" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a62f4a78f13386369805ec40c31328cf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::tovector</definition>
        <argsstring>() const</argsstring>
        <name>tovector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="115" column="12" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a6e5e1ae7f9b4dfaf3e975091ffeab7d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::get</definition>
        <argsstring>(int k)</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="121" column="7" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1aac27fd10dce8b6f474eb93bba93a0f76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::set</definition>
        <argsstring>(int k, T v)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="130" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DualSegmentTree_1a3d1d5982c1ab2b275d51fc80a001e26f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DualSegmentTree&lt; T, F, mapping, composition, e, id &gt;::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="139" column="10" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="139" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" line="16" column="3" bodyfile="titan_cpplib_expanded/data_structures/dual_segment_tree.cpp" bodystart="16" bodyend="147"/>
    <listofallmembers>
      <member refid="structtitan23_1_1DualSegmentTree_1a1f2b6b13cfcc1f2d64bdc66946437d0c" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_all_apply</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a106cf918ccfc3cf7676667a7cd1a9f5f" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_build</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a6cf647971788f554c5c61d4ae42e2210" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_data</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a8de0cd82a73d81d3bbdbbf9b9ffbbe8c" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_lazy</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1ae2afbeed6aee7440e572fee7577e4638" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_log</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1ae431b726c878c0d46e58ebfd9fdc1b91" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_n</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1af966669c8b61576e1556b40649ef79f2" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_propagate</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a8b832ab95c4f51b57f46835396394409" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>_size</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a34b146aa5f4e956517f53e590b5debde" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>all_apply</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1afe756dd239c2908fe84946a8bd63b5b1" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>all_propagate</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a98cee976795dbf28de0063a7cfba79b3" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>apply</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a429140db122c49a663bd35990dd6148a" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>apply_point</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a476258b46ab853152b1aa4942f2ab6e7" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>DualSegmentTree</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1aac6ec4f66bf4601ab1cf1dc8fd26f7ff" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>DualSegmentTree</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1adc929d4fde4fde6e995a614e01e0c840" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>DualSegmentTree</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a6e5e1ae7f9b4dfaf3e975091ffeab7d1" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>get</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a3d1d5982c1ab2b275d51fc80a001e26f" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>print</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1aac27fd10dce8b6f474eb93bba93a0f76" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>set</name></member>
      <member refid="structtitan23_1_1DualSegmentTree_1a62f4a78f13386369805ec40c31328cf8" prot="public" virt="non-virtual"><scope>titan23::DualSegmentTree</scope><name>tovector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

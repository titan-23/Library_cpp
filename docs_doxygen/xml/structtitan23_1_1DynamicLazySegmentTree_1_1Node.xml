<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtitan23_1_1DynamicLazySegmentTree_1_1Node" kind="struct" language="C++" prot="private">
    <compoundname>titan23::DynamicLazySegmentTree::Node</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a4d275ea7c4eb5052013afec5ab111245" prot="public" static="no" mutable="no">
        <type>NodePtr</type>
        <definition>NodePtr titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="50" column="21" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a8ccc5ef6b22aa6cac81fcceaad775192" prot="public" static="no" mutable="no">
        <type>NodePtr</type>
        <definition>NodePtr titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="50" column="26" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a565819db1fdf864d3dd7b12033d738d4" prot="public" static="no" mutable="no">
        <type>IndexType</type>
        <definition>IndexType titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="51" column="23" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a798ccb30e08588e0052ac702417d95e8" prot="public" static="no" mutable="no">
        <type>IndexType</type>
        <definition>IndexType titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="51" column="25" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a55e35194fc22ca748929c0e16711a878" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="52" column="15" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a242e02096efc3252b01556d8775f968b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="52" column="19" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a07c8a5bf70cdf5943edd04f88f4c9f50" prot="public" static="no" mutable="no">
        <type>F</type>
        <definition>F titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::lazy</definition>
        <argsstring></argsstring>
        <name>lazy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="53" column="15" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1af2b8c5fd903285f9c2fdaacffc6bf2d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="55" column="13" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a00f1c7a0d1333ad05d670e28221535f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::Node</definition>
        <argsstring>(IndexType l, IndexType r, T key)</argsstring>
        <name>Node</name>
        <param>
          <type>IndexType</type>
          <declname>l</declname>
        </param>
        <param>
          <type>IndexType</type>
          <declname>r</declname>
        </param>
        <param>
          <type>T</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="57" column="13" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1aa2e1af2d0db47c62371b39c5a9a2a934" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::is_leaf</definition>
        <argsstring>() const</argsstring>
        <name>is_leaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="64" column="18" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1ab4719e78f0217e5a1ef4ce857ed027d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::apply</definition>
        <argsstring>(const F f)</argsstring>
        <name>apply</name>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="68" column="18" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a50e956700acc5e841431769ca8c4cadf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::propagate</definition>
        <argsstring>()</argsstring>
        <name>propagate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="75" column="18" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a5ff8139124f00c5335b152d839f97c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="90" column="18" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="90" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1abf08d05b66f4b510761f447e6af5c917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>IndexType</type>
        <definition>IndexType titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::mid</definition>
        <argsstring>() const</argsstring>
        <name>mid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="101" column="23" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1aa6b6606a37a76bcbc91e54fadef69c9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="105" column="18" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>titan23::DynamicLazySegmentTree&lt; IndexType, T, op, e, F, mapping, composition, id, pow &gt;::Node</label>
        <childnode refid="1" relation="usage">
          <edgelabel>left</edgelabel>
          <edgelabel>right</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" line="49" column="9" bodyfile="titan_cpplib/data_structures/dynamic_lazy_segment_tree.cpp" bodystart="49" bodyend="108"/>
    <listofallmembers>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1ab4719e78f0217e5a1ef4ce857ed027d2" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>apply</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a242e02096efc3252b01556d8775f968b" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>data</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1aa2e1af2d0db47c62371b39c5a9a2a934" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>is_leaf</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a55e35194fc22ca748929c0e16711a878" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>key</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a565819db1fdf864d3dd7b12033d738d4" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>l</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a07c8a5bf70cdf5943edd04f88f4c9f50" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>lazy</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a4d275ea7c4eb5052013afec5ab111245" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>left</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1abf08d05b66f4b510761f447e6af5c917" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>mid</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1af2b8c5fd903285f9c2fdaacffc6bf2d3" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>Node</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a00f1c7a0d1333ad05d670e28221535f0" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>Node</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1aa6b6606a37a76bcbc91e54fadef69c9a" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>print</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a50e956700acc5e841431769ca8c4cadf" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>propagate</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a798ccb30e08588e0052ac702417d95e8" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>r</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a8ccc5ef6b22aa6cac81fcceaad775192" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>right</name></member>
      <member refid="structtitan23_1_1DynamicLazySegmentTree_1_1Node_1a5ff8139124f00c5335b152d839f97c6e" prot="public" virt="non-virtual"><scope>titan23::DynamicLazySegmentTree::Node</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

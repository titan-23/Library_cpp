<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtitan23_1_1Random" kind="struct" language="C++" prot="public">
    <compoundname>titan23::Random</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structtitan23_1_1Random_1a7466d0ca186123e768892d715882ce21" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::Random::_x</definition>
        <argsstring></argsstring>
        <name>_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="12" column="18" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1Random_1aa5f712efb2d57476cc84742f093e7396" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::Random::_y</definition>
        <argsstring></argsstring>
        <name>_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="12" column="21" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1Random_1acb24fee459a4ddbd9242d234ff709f1f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::Random::_z</definition>
        <argsstring></argsstring>
        <name>_z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="12" column="24" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtitan23_1_1Random_1a1e0bac744adc61aaaae98259e8da5cf7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int titan23::Random::_w</definition>
        <argsstring></argsstring>
        <name>_w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="12" column="27" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structtitan23_1_1Random_1a8bb331ebcba2e050292022b1394526e5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int titan23::Random::_xor128</definition>
        <argsstring>()</argsstring>
        <name>_xor128</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="14" column="18" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="14" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtitan23_1_1Random_1ade5caf3ad830145699118032b77b85db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>titan23::Random::Random</definition>
        <argsstring>()</argsstring>
        <name>Random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="24" column="5" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a4191c342de62979837ea89fbceeb3631" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double titan23::Random::random</definition>
        <argsstring>()</argsstring>
        <name>random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="29" column="12" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a60524b9288bf9dde85b6f200272528c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Random::randint</definition>
        <argsstring>(const int end)</argsstring>
        <name>randint</name>
        <param>
          <type>const int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="31" column="9" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1af912a2c0ed6a29669290f43d2e7c8ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Random::randint</definition>
        <argsstring>(const int begin, const int end)</argsstring>
        <name>randint</name>
        <param>
          <type>const int</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="36" column="9" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a6b72ec5b19b8fbbeef8acd5ff2eb5bda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Random::randrange</definition>
        <argsstring>(const int end)</argsstring>
        <name>randrange</name>
        <param>
          <type>const int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="41" column="9" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a01aa00958ee23afc95c6e66d6a55f03c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int titan23::Random::randrange</definition>
        <argsstring>(const int begin, const int end)</argsstring>
        <name>randrange</name>
        <param>
          <type>const int</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="46" column="9" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a74dc79ed9aa5dee428a782eca49407ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double titan23::Random::randdouble</definition>
        <argsstring>(const double begin, const double end)</argsstring>
        <name>randdouble</name>
        <param>
          <type>const double</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="51" column="12" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a8a3e5ca699ccd75cff80a8939b89a91d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void titan23::Random::shuffle</definition>
        <argsstring>(vector&lt; T &gt; &amp;a)</argsstring>
        <name>shuffle</name>
        <param>
          <type>vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="57" column="10" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1aa14fa9b38502d5be75bdc09cfea5ce12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; titan23::Random::choices</definition>
        <argsstring>(const vector&lt; T &gt; &amp;a, const int k)</argsstring>
        <name>choices</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="66" column="12" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a6e5323152fa179e6ce198965ef84bc83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T titan23::Random::choice</definition>
        <argsstring>(const vector&lt; T &gt; &amp;a)</argsstring>
        <name>choice</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="80" column="7" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1a09fa8bb8f81eabfca9e4d0bc3bc34ece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T titan23::Random::choice</definition>
        <argsstring>(const vector&lt; T &gt; &amp;a, const vector&lt; int &gt; &amp;w, bool normal)</argsstring>
        <name>choice</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="85" column="7" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="85" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structtitan23_1_1Random_1ae72775efea327eabef4283b9fa47f5d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T titan23::Random::choice</definition>
        <argsstring>(const vector&lt; T &gt; &amp;a, const vector&lt; double &gt; &amp;w)</argsstring>
        <name>choice</name>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const vector&lt; double &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="titan_cpplib/algorithm/random.cpp" line="100" column="7" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="100" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="titan_cpplib/algorithm/random.cpp" line="9" column="3" bodyfile="titan_cpplib/algorithm/random.cpp" bodystart="9" bodyend="110"/>
    <listofallmembers>
      <member refid="structtitan23_1_1Random_1a1e0bac744adc61aaaae98259e8da5cf7" prot="private" virt="non-virtual"><scope>titan23::Random</scope><name>_w</name></member>
      <member refid="structtitan23_1_1Random_1a7466d0ca186123e768892d715882ce21" prot="private" virt="non-virtual"><scope>titan23::Random</scope><name>_x</name></member>
      <member refid="structtitan23_1_1Random_1a8bb331ebcba2e050292022b1394526e5" prot="private" virt="non-virtual"><scope>titan23::Random</scope><name>_xor128</name></member>
      <member refid="structtitan23_1_1Random_1aa5f712efb2d57476cc84742f093e7396" prot="private" virt="non-virtual"><scope>titan23::Random</scope><name>_y</name></member>
      <member refid="structtitan23_1_1Random_1acb24fee459a4ddbd9242d234ff709f1f" prot="private" virt="non-virtual"><scope>titan23::Random</scope><name>_z</name></member>
      <member refid="structtitan23_1_1Random_1a6e5323152fa179e6ce198965ef84bc83" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>choice</name></member>
      <member refid="structtitan23_1_1Random_1a09fa8bb8f81eabfca9e4d0bc3bc34ece" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>choice</name></member>
      <member refid="structtitan23_1_1Random_1ae72775efea327eabef4283b9fa47f5d2" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>choice</name></member>
      <member refid="structtitan23_1_1Random_1aa14fa9b38502d5be75bdc09cfea5ce12" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>choices</name></member>
      <member refid="structtitan23_1_1Random_1a74dc79ed9aa5dee428a782eca49407ee" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>randdouble</name></member>
      <member refid="structtitan23_1_1Random_1a60524b9288bf9dde85b6f200272528c5" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>randint</name></member>
      <member refid="structtitan23_1_1Random_1af912a2c0ed6a29669290f43d2e7c8ea4" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>randint</name></member>
      <member refid="structtitan23_1_1Random_1ade5caf3ad830145699118032b77b85db" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>Random</name></member>
      <member refid="structtitan23_1_1Random_1a4191c342de62979837ea89fbceeb3631" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>random</name></member>
      <member refid="structtitan23_1_1Random_1a6b72ec5b19b8fbbeef8acd5ff2eb5bda" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>randrange</name></member>
      <member refid="structtitan23_1_1Random_1a01aa00958ee23afc95c6e66d6a55f03c" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>randrange</name></member>
      <member refid="structtitan23_1_1Random_1a8a3e5ca699ccd75cff80a8939b89a91d" prot="public" virt="non-virtual"><scope>titan23::Random</scope><name>shuffle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
